{
  "b": 17,
  "disableInputWhenNotFocused": true,
  "mangledName": "stage",
  "name": "stage",
  "r": 11,
  "standardSortMethod": true,
  "stopSoundsOnStartup": true,
  "title": "",
  "v": 11,
  "uiSettings": {
    "grid": true,
    "gridType": "rectangular",
    "gridWidth": 32,
    "gridHeight": 32,
    "gridOffsetX": 0,
    "gridOffsetY": 0,
    "gridColor": 10401023,
    "gridAlpha": 0.8,
    "snap": true,
    "zoomFactor": 0.32500000000000007,
    "windowMask": false
  },
  "objectsGroups": [
    {
      "name": "tools",
      "objects": [
        {
          "name": "penTool"
        },
        {
          "name": "timeCursorTool"
        }
      ]
    },
    {
      "name": "supporters",
      "objects": [
        {
          "name": "boxSupporters"
        },
        {
          "name": "supporterGuideText"
        }
      ]
    },
    {
      "name": "changeUI",
      "objects": [
        {
          "name": "paramValue"
        },
        {
          "name": "paramName"
        },
        {
          "name": "paramCheckbox"
        },
        {
          "name": "paramListMask"
        }
      ]
    },
    {
      "name": "changeUIMovable",
      "objects": [
        {
          "name": "paramName"
        },
        {
          "name": "paramValue"
        },
        {
          "name": "paramCheckbox"
        }
      ]
    }
  ],
  "variables": [
    {
      "folded": true,
      "name": "zoom",
      "type": "number",
      "value": 1
    }
  ],
  "instances": [
    {
      "angle": 0,
      "customSize": true,
      "height": 416,
      "layer": "GUI",
      "name": "controlPLate",
      "persistentUuid": "256e5427-7d80-481f-9d4e-e10cd2e3e54b",
      "width": 1920,
      "x": 0,
      "y": 672,
      "zOrder": 1,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 288,
      "layer": "GUI",
      "name": "timeline",
      "persistentUuid": "ebe5e2ba-c7fa-4a0d-a033-cefcedffed7b",
      "width": 1664,
      "x": 32,
      "y": 768,
      "zOrder": 2,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 320,
      "layer": "GUI",
      "name": "timeCursor",
      "persistentUuid": "87d293e9-d942-4e60-a64c-ca03e2021607",
      "width": 16,
      "x": 32,
      "y": 752,
      "zOrder": 4,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "penTool",
      "persistentUuid": "f9e22447-750e-436c-b06a-3204e677a411",
      "width": 32,
      "x": 1824,
      "y": 704,
      "zOrder": 5,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "timeLength",
      "persistentUuid": "cd518783-d7f4-4b7c-875a-8ccae343cd6e",
      "width": 160,
      "x": 192,
      "y": 704,
      "zOrder": 7,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 19,
      "layer": "GUI",
      "name": "timeLengthGuide",
      "persistentUuid": "9dc6fb01-0d8c-481b-bc6e-dafe0a64797f",
      "width": 160,
      "x": 32,
      "y": 704,
      "zOrder": 8,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "",
      "name": "supporterGuide",
      "persistentUuid": "f292cd7f-9bed-40f3-b259-32c33c52103e",
      "width": 0,
      "x": 0,
      "y": 0,
      "zOrder": 9,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "play",
      "persistentUuid": "93739d9a-dad1-40a1-81c1-229635177647",
      "width": 32,
      "x": 384,
      "y": 704,
      "zOrder": 11,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 1088,
      "layer": "GUI",
      "name": "controlPLate",
      "persistentUuid": "f11484c9-fa6a-4db7-a8c2-a12d64ebdab8",
      "width": 320,
      "x": 0,
      "y": 0,
      "zOrder": 1,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "GUI",
      "name": "nodeDragGuide",
      "persistentUuid": "0752c7f8-c4b2-44c2-8ede-26bdbeb88e2c",
      "width": 0,
      "x": 0,
      "y": 0,
      "zOrder": 12,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 16,
      "layer": "GUI",
      "name": "paramListStart",
      "persistentUuid": "101748cc-b22a-4686-986f-d8265a04974c",
      "width": 267,
      "x": 32,
      "y": 71,
      "zOrder": 13,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 64,
      "layer": "GUI",
      "name": "boxTool",
      "persistentUuid": "795dbbd8-fce4-4489-8986-192291bb85f5",
      "width": 64,
      "x": 1728,
      "y": 704,
      "zOrder": 14,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "GUI",
      "name": "fpsTracker",
      "persistentUuid": "69863eea-93b3-4a4e-9cea-952518a74d4d",
      "width": 0,
      "x": 326,
      "y": 6,
      "zOrder": 15,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "save",
      "persistentUuid": "1d2f419d-5d0c-43ae-b18d-abc136e7dcf0",
      "width": 32,
      "x": 1632,
      "y": 704,
      "zOrder": 16,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 1088,
      "layer": "",
      "name": "grid",
      "persistentUuid": "2ccbea72-6930-4459-bead-b7b125ae1dc8",
      "width": 1920,
      "x": 0,
      "y": 0,
      "zOrder": -12,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "saveSkel",
      "persistentUuid": "cda91dd0-be9c-4c8a-970b-bb74a3baa661",
      "width": 32,
      "x": 1568,
      "y": 704,
      "zOrder": 17,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "saveAnim",
      "persistentUuid": "fe3d9031-6004-4e3f-82e9-b9ab34213ab5",
      "width": 32,
      "x": 1504,
      "y": 704,
      "zOrder": 18,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "home",
      "persistentUuid": "4bacd40e-47eb-4bd7-832d-9675730a7f69",
      "width": 32,
      "x": 19,
      "y": 17,
      "zOrder": 19,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "paramListEnd",
      "persistentUuid": "f47abea6-3007-40f1-8d1b-a630b0b887ca",
      "width": 256,
      "x": 32,
      "y": 640,
      "zOrder": 20,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "projectName",
      "persistentUuid": "c02f997e-60e3-44b3-a2a2-50516a4471d9",
      "width": 352,
      "x": 576,
      "y": 704,
      "zOrder": 21,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 19,
      "layer": "GUI",
      "name": "projectNameGuide",
      "persistentUuid": "56d91c26-f232-4ff3-bcb7-2756d6358cca",
      "width": 96,
      "x": 480,
      "y": 704,
      "zOrder": 22,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 64,
      "layer": "GUI",
      "name": "moveEverythingTool",
      "persistentUuid": "ae358552-0705-40ab-aef1-f148a1ef62da",
      "width": 64,
      "x": 1728,
      "y": 800,
      "zOrder": 23,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 64,
      "layer": "GUI",
      "name": "moveNodeTool",
      "persistentUuid": "28e9cc96-6799-4ac2-8066-96ba15cf2502",
      "width": 64,
      "x": 1824,
      "y": 800,
      "zOrder": 24,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "height": 32,
      "layer": "GUI",
      "name": "timeCursorTool",
      "persistentUuid": "f0723133-9e1a-4fb4-ada3-dbb1edbf5c92",
      "width": 32,
      "x": 1856,
      "y": 736,
      "zOrder": 25,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    }
  ],
  "objects": [
    {
      "assetStoreId": "",
      "bottomMargin": 4,
      "height": 32,
      "leftMargin": 4,
      "name": "controlPLate",
      "rightMargin": 4,
      "tags": "",
      "texture": "assets\\NewSprite-1.png",
      "tiled": true,
      "topMargin": 4,
      "type": "PanelSpriteObject::PanelSprite",
      "width": 32,
      "variables": [],
      "effects": [],
      "behaviors": []
    },
    {
      "assetStoreId": "",
      "bottomMargin": 4,
      "height": 32,
      "leftMargin": 4,
      "name": "timeline",
      "rightMargin": 4,
      "tags": "",
      "texture": "assets\\NewFile-1.png",
      "tiled": true,
      "topMargin": 4,
      "type": "PanelSpriteObject::PanelSprite",
      "width": 32,
      "variables": [],
      "effects": [],
      "behaviors": []
    },
    {
      "assetStoreId": "",
      "name": "box",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [
        {
          "name": "selected",
          "type": "boolean",
          "value": false
        }
      ],
      "effects": [
        {
          "effectType": "ColorMap",
          "name": "select",
          "doubleParameters": {
            "mix": 100
          },
          "stringParameters": {
            "colorMapTexture": "assets\\hue200.png"
          },
          "booleanParameters": {
            "nearest": true
          }
        },
        {
          "effectType": "Outline",
          "name": "hover",
          "doubleParameters": {
            "padding": 17,
            "thickness": 5
          },
          "stringParameters": {
            "color": "28;202;248"
          },
          "booleanParameters": {}
        }
      ],
      "behaviors": [
        {
          "name": "Draggable",
          "type": "DraggableBehavior::Draggable",
          "checkCollisionMask": true
        },
        {
          "name": "Tween",
          "type": "Tween::TweenBehavior"
        }
      ],
      "animations": [
        {
          "name": "box1",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\box1-1.png",
                  "points": [
                    {
                      "name": "Size",
                      "x": 32,
                      "y": 32
                    },
                    {
                      "name": "Angle",
                      "x": 0,
                      "y": 0
                    }
                  ],
                  "originPoint": {
                    "name": "origine",
                    "x": 16,
                    "y": 16
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "boxSupporters",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "Size",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": true,
                  "image": "assets\\Size-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 4,
                    "y": 4
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": [
                    [
                      {
                        "x": 8,
                        "y": 0
                      },
                      {
                        "x": 8,
                        "y": 8
                      },
                      {
                        "x": 0,
                        "y": 8
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Angle",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": true,
                  "image": "assets\\Angle-1-2.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 4,
                    "y": 4
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": [
                    [
                      {
                        "x": 8,
                        "y": 0
                      },
                      {
                        "x": 0,
                        "y": 0
                      },
                      {
                        "x": 0,
                        "y": 8
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "timeCursor",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "NewSprite",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\NewSprite-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 16,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "node",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [
        {
          "effectType": "DropShadow",
          "name": "shadow",
          "doubleParameters": {
            "alpha": 0.4,
            "blur": 3,
            "distance": 1,
            "padding": 20,
            "quality": 4,
            "rotation": 0
          },
          "stringParameters": {
            "color": "16;25;34"
          },
          "booleanParameters": {
            "shadowOnly": false
          }
        },
        {
          "effectType": "AdvancedBloom",
          "name": "select",
          "doubleParameters": {
            "bloomScale": 0.7,
            "blur": 4,
            "brightness": 0.7,
            "padding": 0,
            "quality": 7,
            "threshold": 0.5
          },
          "stringParameters": {},
          "booleanParameters": {}
        }
      ],
      "behaviors": [
        {
          "name": "Draggable",
          "type": "DraggableBehavior::Draggable",
          "checkCollisionMask": false
        },
        {
          "name": "YSort",
          "type": "YSort::YSort"
        }
      ],
      "animations": [
        {
          "name": "all",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.08,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\nodes\\all.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "penTool",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "pen",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\pen-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "timeCursorTool",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "pen",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\tweenframe.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "boxTool",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "pen",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\boxdrag.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "moveEverythingTool",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "pen",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\movedrag.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "moveNodeTool",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "pen",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\nodedrag.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "projectName",
      "tags": "",
      "type": "TextInput::TextInputObject",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "initialValue": "Untitled",
        "placeholder": "Project Name",
        "fontResourceName": "Minecraft.ttf",
        "fontSize": 32,
        "inputType": "text",
        "textColor": "255;255;255",
        "fillColor": "35;35;53",
        "fillOpacity": 255,
        "borderColor": "35;35;53",
        "borderOpacity": 255,
        "borderWidth": 2,
        "readOnly": false,
        "disabled": false
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "projectNameGuide",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Project Name:",
      "font": "Minecraft.ttf",
      "characterSize": 16,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      }
    },
    {
      "assetStoreId": "",
      "name": "redSelectTool",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "redSelectTool",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\redSelectTool-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "timeSpeed",
      "tags": "",
      "type": "PrimitiveDrawing::Drawer",
      "variables": [],
      "effects": [],
      "behaviors": [
        {
          "name": "DraggableSliderControl",
          "type": "DraggableSliderControl::DraggableSliderControl",
          "ValueMin": 0,
          "ValueMax": 1,
          "TickSpacing": 0,
          "ThumbShape": "rectangle",
          "ThumbWidth": 20,
          "ThumbHeight": 20,
          "ThumbColor": "255;64;238",
          "ThumbOpacity": 255,
          "TrackLength": 400,
          "TrackThickness": 4,
          "InactiveTrackColor": "",
          "InactiveTrackOpacity": 96,
          "ActiveTrackColor": " ",
          "ActiveTrackOpacity": 255,
          "HaloRadius": 12,
          "HaloOpacityHover": 45,
          "HaloOpacityClick": 255,
          "RoundedTrack": true,
          "Enabled": true,
          "IsBeingDragged": false,
          "Value": 0,
          "ThumbOffset": 0,
          "NeedRedraw": true,
          "IsHovered": false,
          "MouseX": 0,
          "MouseY": 0,
          "CurrentHaloRadius": 0,
          "HaloGrowSpeed": 0.2,
          "TargetHaloRadius": 0
        }
      ],
      "fillOpacity": 255,
      "outlineSize": 2,
      "outlineOpacity": 255,
      "fillColor": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "outlineColor": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "absoluteCoordinates": false,
      "clearBetweenFrames": true
    },
    {
      "assetStoreId": "",
      "name": "timeLength",
      "tags": "",
      "type": "TextInput::TextInputObject",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "initialValue": "0.5",
        "placeholder": "how?????",
        "fontResourceName": "Minecraft.ttf",
        "fontSize": 32,
        "inputType": "number",
        "textColor": "255;255;255",
        "fillColor": "35;35;53",
        "fillOpacity": 255,
        "borderColor": "35;35;53",
        "borderOpacity": 255,
        "borderWidth": 2,
        "readOnly": false,
        "disabled": false
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "timeLengthGuide",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Animation Length (seconds)",
      "font": "Minecraft.ttf",
      "characterSize": 16,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "fpsTracker",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [
        {
          "name": "FPSDisplayer",
          "type": "FPS::FPSDisplayer",
          "prefix": "FPS: "
        }
      ],
      "string": "FPS: ",
      "font": "Minecraft.ttf",
      "characterSize": 16,
      "color": {
        "b": 80,
        "g": 66,
        "r": 63
      }
    },
    {
      "assetStoreId": "",
      "name": "paramValue",
      "tags": "",
      "type": "TextInput::TextInputObject",
      "variables": [],
      "effects": [],
      "behaviors": [
        {
          "name": "Tween",
          "type": "Tween::TweenBehavior"
        }
      ],
      "content": {
        "initialValue": "0",
        "placeholder": "-",
        "fontResourceName": "Minecraft.ttf",
        "fontSize": 24,
        "inputType": "text",
        "textColor": "255;255;255",
        "fillColor": "35;35;53",
        "fillOpacity": 255,
        "borderColor": "35;35;53",
        "borderOpacity": 255,
        "borderWidth": 2,
        "readOnly": false,
        "disabled": false
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "paramName",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Animation Length (seconds)",
      "font": "Minecraft.ttf",
      "characterSize": 20,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      }
    },
    {
      "assetStoreId": "",
      "name": "paramCheckbox",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.08,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\nah.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 4,
                    "y": 4
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        },
        {
          "name": "",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.08,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\right.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 4,
                    "y": 4
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "paramListStart",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "paramlist",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\paramlist-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "paramListEnd",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "paramlist",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\paramlist-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "paramListMask",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "paramlist",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\paramlist-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "supporterGuide",
      "tags": "",
      "type": "PrimitiveDrawing::Drawer",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "fillOpacity": 0,
      "outlineSize": 4,
      "outlineOpacity": 255,
      "fillColor": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "outlineColor": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "absoluteCoordinates": false,
      "clearBetweenFrames": true
    },
    {
      "assetStoreId": "",
      "name": "nodeDragGuide",
      "tags": "",
      "type": "PrimitiveDrawing::Drawer",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "fillOpacity": 255,
      "outlineSize": 0,
      "outlineOpacity": 0,
      "fillColor": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "outlineColor": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "absoluteCoordinates": false,
      "clearBetweenFrames": true
    },
    {
      "assetStoreId": "",
      "name": "supporterGuideText",
      "tags": "",
      "type": "BBText::BBText",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "text": "0",
        "opacity": 255,
        "fontSize": 40,
        "visible": true,
        "color": "255;255;255",
        "fontFamily": "Minecraft.ttf",
        "align": "left",
        "wordWrap": true
      }
    },
    {
      "assetStoreId": "",
      "name": "JustAGuid",
      "tags": "",
      "type": "BBText::BBText",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "text": "[/b][size=60]Guide:[/size][/b]\n\nctrl+a to select all\nshift while selecting to well... select more than one object\n\nwhile changing the scale:\n\nshift to [b]S Q U A R E[/b]\nctrl to [b]S T A Y[/b]\n\nwhile changing the angle:\n\nshift to snap to every 5th angle??? idk\nctrl to [b]P O I N T[/b]",
        "opacity": 255,
        "fontSize": 30,
        "visible": true,
        "color": "95;102;170",
        "fontFamily": "Arial",
        "align": "left",
        "wordWrap": true
      }
    },
    {
      "assetStoreId": "",
      "name": "NewBBText",
      "tags": "",
      "type": "BBText::BBText",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "text": "[b]bold[/b] [i]italic[/i] [size=15]smaller[/size] [font=times]times[/font] font\n[spacing=12]spaced out[/spacing]\n[outline=yellow]outlined[/outline] [shadow=red]DropShadow[/shadow] ",
        "opacity": 255,
        "fontSize": 20,
        "visible": true,
        "color": "0;0;0",
        "fontFamily": "Arial",
        "align": "left",
        "wordWrap": true
      }
    },
    {
      "assetStoreId": "",
      "name": "play",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "NewSprite",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\NewSprite-1-0.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        },
        {
          "name": "dfsdf",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\NewSprite-1-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "save",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "dfsdf",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\dfsdf-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "home",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "dfsdf",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\home.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "saveSkel",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "dfsdf",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\saveskelli.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "saveAnim",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "dfsdf",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\saveanim.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "boxImage",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "empty",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\empty\\empty-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": false,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        },
        {
          "name": "boxImage",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\empty\\boxImage-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": false,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "boxImager",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "NewSprite",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "assets\\empty\\NewSprite-1-0.png",
                  "points": [
                    {
                      "name": "Hang",
                      "x": 0,
                      "y": 0
                    }
                  ],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "height": 32,
      "name": "grid",
      "tags": "",
      "texture": "assets\\infinity\\grid.png",
      "type": "TiledSpriteObject::TiledSprite",
      "width": 32,
      "variables": [],
      "effects": [],
      "behaviors": []
    },
    {
      "assetStoreId": "",
      "name": "center",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.08,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "buttonzx\\center.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 8,
                    "y": 8
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "name": "boxSelector",
      "tags": "",
      "type": "PrimitiveDrawing::Drawer",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "fillOpacity": 25,
      "outlineSize": 2,
      "outlineOpacity": 255,
      "fillColor": {
        "b": 199,
        "g": 214,
        "r": 32
      },
      "outlineColor": {
        "b": 219,
        "g": 252,
        "r": 166
      },
      "absoluteCoordinates": false,
      "clearBetweenFrames": true
    },
    {
      "assetStoreId": "",
      "name": "nodeSelector",
      "tags": "",
      "type": "PrimitiveDrawing::Drawer",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "fillOpacity": 25,
      "outlineSize": 2,
      "outlineOpacity": 255,
      "fillColor": {
        "b": 219,
        "g": 252,
        "r": 166
      },
      "outlineColor": {
        "b": 192,
        "g": 243,
        "r": 254
      },
      "absoluteCoordinates": false,
      "clearBetweenFrames": true
    }
  ],
  "events": [
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "folded": true,
      "name": "Debugging",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "disabled": true,
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "value": "DebuggerTools::EnableDebugDraw"
              },
              "parameters": [
                "",
                "",
                "",
                "",
                ""
              ]
            }
          ]
        },
        {
          "disabled": true,
          "folded": true,
          "type": "BuiltinCommonInstructions::ForEach",
          "object": "box",
          "conditions": [
            {
              "type": {
                "value": "ObjectVariableAsBoolean"
              },
              "parameters": [
                "box",
                "her",
                "True"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "PrimitiveDrawing::Circle"
              },
              "parameters": [
                "nodeDragGuide",
                "box.X()",
                "box.Y()",
                "100"
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 218,
      "colorG": 206,
      "colorR": 221,
      "creationTime": 0,
      "name": "All events",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "JSONToGlobalVariableStructure"
              },
              "parameters": [
                "\"[\\\"January\\\",\\\"February\\\",\\\"March\\\",\\\"April\\\",\\\"May\\\",\\\"June\\\",\\\"July\\\",\\\"August\\\",\\\"September\\\",\\\"October\\\",\\\"November\\\",\\\"December\\\"]\"",
                "months"
              ]
            }
          ]
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Boxes",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Select all ",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "LControl"
                      ]
                    },
                    {
                      "type": {
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "a"
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Once"
                      },
                      "parameters": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "supported",
                        "False"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "LinkedObjects::PickObjectsLinkedTo"
                          },
                          "parameters": [
                            "",
                            "node",
                            "box",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "node",
                            "shown",
                            "True"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Box Selection",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "onSupporters",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "boxSupporters",
                        "",
                        "",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "onSupporters",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "ActivateBehavior"
                      },
                      "parameters": [
                        "box",
                        "Draggable",
                        "no"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "onSupporters",
                        "False"
                      ]
                    },
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "gettingSupported",
                        "False"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ActivateBehavior"
                      },
                      "parameters": [
                        "box",
                        "Draggable",
                        "yes"
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Select",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Not"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "SourisSurObjet"
                              },
                              "parameters": [
                                "controlPLate",
                                "",
                                "",
                                ""
                              ]
                            }
                          ]
                        },
                        {
                          "type": {
                            "inverted": true,
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "LAlt"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "Click::click"
                              },
                              "parameters": [
                                "",
                                "Left",
                                "box",
                                ""
                              ]
                            },
                            {
                              "type": {
                                "value": "SourisSurObjet"
                              },
                              "parameters": [
                                "box",
                                "",
                                "",
                                ""
                              ]
                            },
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "onSupporters",
                                "False"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "box",
                                "selected",
                                "True"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "box",
                                "supported",
                                "False"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "box",
                                "her",
                                "True"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "createChangeUIType",
                                "=",
                                "\"box\""
                              ]
                            },
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "createChangeUI",
                                "True"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                  },
                                  "parameters": [
                                    "",
                                    "node",
                                    "box",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SetObjectVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "node",
                                    "shown",
                                    "True"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "MouseButtonPressed"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Once"
                          },
                          "parameters": []
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Not"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "SourisSurObjet"
                              },
                              "parameters": [
                                "controlPLate",
                                "",
                                "",
                                ""
                              ]
                            }
                          ]
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Not"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "SourisSurObjet"
                              },
                              "parameters": [
                                "box",
                                "",
                                "",
                                ""
                              ]
                            }
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "selectingBoxes",
                            "True"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "selectingBoxes",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "RTSUnitSelection::RTSUnitSelection"
                          },
                          "parameters": [
                            "",
                            "box",
                            "boxSelector",
                            "\"\"",
                            "-2000",
                            "a",
                            "d",
                            "Left",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "MouseButtonReleased"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "selectingBoxes",
                            "False"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "RTSUnitSelection::IsSelected"
                          },
                          "parameters": [
                            "",
                            "box",
                            ""
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "box",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "RTSUnitSelection::IsSelected"
                                  },
                                  "parameters": [
                                    "",
                                    "box",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SetObjectVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "box",
                                    "selected",
                                    "True"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "RTSUnitSelection::SetSelected"
                                  },
                                  "parameters": [
                                    "",
                                    "box",
                                    "",
                                    ""
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Deselect",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "MouseButtonPressed"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Once"
                          },
                          "parameters": []
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Not"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "SourisSurObjet"
                              },
                              "parameters": [
                                "controlPLate",
                                "",
                                "",
                                ""
                              ]
                            }
                          ]
                        },
                        {
                          "type": {
                            "inverted": true,
                            "value": "DraggableBehavior::Dragged"
                          },
                          "parameters": [
                            "box",
                            "Draggable"
                          ]
                        },
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "onSupporters",
                            "False"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "her",
                            "False"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "name": "Control over what is selected",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "KeyPressed"
                                  },
                                  "parameters": [
                                    "",
                                    "LShift"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SetObjectVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "box",
                                    "selected",
                                    "False"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::ForEach",
                                  "object": "box",
                                  "conditions": [],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "LinkedObjects::PickObjectsLinkedTo"
                                          },
                                          "parameters": [
                                            "",
                                            "boxSupporters",
                                            "box",
                                            ""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Delete"
                                          },
                                          "parameters": [
                                            "boxSupporters",
                                            ""
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "LinkedObjects::PickObjectsLinkedTo"
                                          },
                                          "parameters": [
                                            "",
                                            "node",
                                            "box",
                                            ""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "SetObjectVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "node",
                                            "shown",
                                            "False"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "SetObjectVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "node",
                                            "selected",
                                            "False"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Opacity"
                                          },
                                          "parameters": [
                                            "node",
                                            "=",
                                            "0"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "SetSceneVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "deleteChangeUI",
                                        "True"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "parameters": []
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": []
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Box Selection Effects",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "EnableEffect"
                      },
                      "parameters": [
                        "box",
                        "\"select\"",
                        "yes"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "False"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "EnableEffect"
                      },
                      "parameters": [
                        "box",
                        "\"select\"",
                        "no"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "gettingSupported",
                        "False"
                      ]
                    },
                    {
                      "type": {
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "box",
                        "",
                        "yes",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "EnableEffect"
                      },
                      "parameters": [
                        "box",
                        "\"hover\"",
                        "yes"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "CollisionPoint"
                      },
                      "parameters": [
                        "box",
                        "MouseX()",
                        "MouseY()"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "EnableEffect"
                      },
                      "parameters": [
                        "box",
                        "\"hover\"",
                        "no"
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Create boxes",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "MouseButtonPressed"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Once"
                      },
                      "parameters": []
                    },
                    {
                      "type": {
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "boxTool",
                        "",
                        "",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "box",
                        "MouseX()",
                        "MouseY()",
                        "\"\""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "followm",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeScale"
                      },
                      "parameters": [
                        "box",
                        "=",
                        "4"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "folded": true,
                      "name": "Data",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjetTxt"
                              },
                              "parameters": [
                                "box",
                                "data.anm.object.objName",
                                "=",
                                "\"box\""
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjetTxt"
                              },
                              "parameters": [
                                "box",
                                "data.anm.object.UUID",
                                "=",
                                "ToString(SceneInstancesCount(box))"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjetTxt"
                              },
                              "parameters": [
                                "box",
                                "data.anm.object.imgURL",
                                "=",
                                "\"\""
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.position.X",
                                "=",
                                "box.X()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.position.Y",
                                "=",
                                "box.Y()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.width",
                                "=",
                                "box.Width()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.height",
                                "=",
                                "box.Height()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.angle",
                                "=",
                                "box.Angle()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.opacity",
                                "=",
                                "box.Opacity()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.zOrder",
                                "=",
                                "box.ZOrder()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.flippedHor",
                                "=",
                                "0"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.flippedVer",
                                "=",
                                "0"
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "folded": true,
                      "name": "Images",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "Create"
                              },
                              "parameters": [
                                "",
                                "boxImager",
                                "0",
                                "0",
                                "\"\""
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangePlan"
                              },
                              "parameters": [
                                "boxImager",
                                "=",
                                "box.ZOrder()+1"
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangeHeight"
                              },
                              "parameters": [
                                "boxImager",
                                "=",
                                "box.Height()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangeWidth"
                              },
                              "parameters": [
                                "boxImager",
                                "=",
                                "box.Width()"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetAngle"
                              },
                              "parameters": [
                                "boxImager",
                                "=",
                                "box.Angle()"
                              ]
                            },
                            {
                              "type": {
                                "value": "MettreXY"
                              },
                              "parameters": [
                                "boxImager",
                                "=",
                                "box.X()",
                                "=",
                                "box.Y()"
                              ]
                            },
                            {
                              "type": {
                                "value": "LinkedObjects::LinkObjects"
                              },
                              "parameters": [
                                "",
                                "box",
                                "boxImager"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "Create"
                                  },
                                  "parameters": [
                                    "",
                                    "boxImage",
                                    "0",
                                    "0",
                                    "\"\""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ChangePlan"
                                  },
                                  "parameters": [
                                    "boxImage",
                                    "=",
                                    "box.ZOrder()+1"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ChangeHeight"
                                  },
                                  "parameters": [
                                    "boxImage",
                                    "=",
                                    "box.Height()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ChangeWidth"
                                  },
                                  "parameters": [
                                    "boxImage",
                                    "=",
                                    "box.Width()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "SetAngle"
                                  },
                                  "parameters": [
                                    "boxImage",
                                    "=",
                                    "box.Angle()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "MettreXY"
                                  },
                                  "parameters": [
                                    "boxImage",
                                    "=",
                                    "box.X()",
                                    "=",
                                    "box.Y()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "LinkedObjects::LinkObjects"
                                  },
                                  "parameters": [
                                    "",
                                    "box",
                                    "boxImage"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "LinkedObjects::LinkObjects"
                                  },
                                  "parameters": [
                                    "",
                                    "boxImager",
                                    "boxImage"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "LinkedObjects::PickObjectsLinkedTo"
                          },
                          "parameters": [
                            "",
                            "boxImage",
                            "box",
                            ""
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "FlippedX"
                              },
                              "parameters": [
                                "boxImage"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.flippedHor",
                                "=",
                                "1"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "FlippedY"
                              },
                              "parameters": [
                                "boxImage"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.flippedVer",
                                "=",
                                "1"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "followm",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreXY"
                      },
                      "parameters": [
                        "box",
                        "=",
                        "MouseX()",
                        "=",
                        "MouseY()"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "followm",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "followm",
                        "False"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "boxTool",
                            "",
                            "",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "box",
                            ""
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Duplicate boxes",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Copying the data and the creating another box with the data",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "DraggableBehavior::Dragged"
                          },
                          "parameters": [
                            "box",
                            "Draggable"
                          ]
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Once"
                          },
                          "parameters": []
                        },
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "LControl"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "VariableClearChildren"
                          },
                          "parameters": [
                            "saveData"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ObjectVariableClearChildren"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.node"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.position.Y",
                                    "=",
                                    "box.Y()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.position.X",
                                    "=",
                                    "box.X()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.width",
                                    "=",
                                    "box.Width()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.height",
                                    "=",
                                    "box.Height()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.angle",
                                    "=",
                                    "box.Angle()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.opacity",
                                    "=",
                                    "box.Opacity()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.zOrder",
                                    "=",
                                    "box.ZOrder()"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "LinkedObjects::PickObjectsLinkedTo"
                                      },
                                      "parameters": [
                                        "",
                                        "boxImage",
                                        "box",
                                        ""
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "FlippedX"
                                          },
                                          "parameters": [
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm.flippedHor",
                                            "=",
                                            "1"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "FlippedY"
                                          },
                                          "parameters": [
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm.flippedVer",
                                            "=",
                                            "1"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "LinkedObjects::PickObjectsLinkedTo"
                                      },
                                      "parameters": [
                                        "",
                                        "node",
                                        "box",
                                        ""
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::ForEach",
                                      "object": "node",
                                      "conditions": [],
                                      "actions": [],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "data.anm.timeline.start",
                                                "=",
                                                "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "data.anm.timeline.length",
                                                "=",
                                                "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "data.phys.X",
                                                "=",
                                                "node.X()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "data.phys.Y",
                                                "=",
                                                "node.Y()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "JSONToVariableStructure"
                                              },
                                              "parameters": [
                                                "ObjectVarToJSON(node, data)",
                                                "nodeSaveData"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ObjectVariablePush"
                                              },
                                              "parameters": [
                                                "box",
                                                "data.node",
                                                "nodeSaveData"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(box, data)",
                                        "boxData"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "SetSceneVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "createCopy",
                                        "True"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "createCopy",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "createCopy",
                            "False"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "Create"
                              },
                              "parameters": [
                                "",
                                "box",
                                "MouseX()",
                                "MouseY()",
                                "\"\""
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "MettreXY"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "Variable(boxData.anm.position.X)",
                                    "=",
                                    "Variable(boxData.anm.position.Y)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "SetSize"
                                  },
                                  "parameters": [
                                    "box",
                                    "Variable(boxData.anm.width)",
                                    "Variable(boxData.anm.height)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "SetAngle"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "Variable(boxData.anm.angle)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Opacity"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "Variable(boxData.anm.opacity)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ChangePlan"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "Variable(boxData.anm.zOrder)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "JSONToObjectVariableStructure"
                                  },
                                  "parameters": [
                                    "ToJSON(boxData)",
                                    "box",
                                    "data"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.object.UUID",
                                    "=",
                                    "UUID::GenerateUUIDv4()"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "boxData.anm.flippedVer",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "FlipX"
                                      },
                                      "parameters": [
                                        "box",
                                        "yes"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "boxData.anm.flippedHor",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "FlipX"
                                      },
                                      "parameters": [
                                        "box",
                                        "yes"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "colorB": 228,
                                  "colorG": 176,
                                  "colorR": 74,
                                  "creationTime": 0,
                                  "folded": true,
                                  "name": "Images",
                                  "source": "",
                                  "type": "BuiltinCommonInstructions::Group",
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Create"
                                          },
                                          "parameters": [
                                            "",
                                            "boxImager",
                                            "0",
                                            "0",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangePlan"
                                          },
                                          "parameters": [
                                            "boxImager",
                                            "=",
                                            "box.ZOrder()+1"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangeHeight"
                                          },
                                          "parameters": [
                                            "boxImager",
                                            "=",
                                            "box.Height()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangeWidth"
                                          },
                                          "parameters": [
                                            "boxImager",
                                            "=",
                                            "box.Width()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "SetAngle"
                                          },
                                          "parameters": [
                                            "boxImager",
                                            "=",
                                            "box.Angle()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "MettreXY"
                                          },
                                          "parameters": [
                                            "boxImager",
                                            "=",
                                            "box.X()",
                                            "=",
                                            "box.Y()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "LinkedObjects::LinkObjects"
                                          },
                                          "parameters": [
                                            "",
                                            "box",
                                            "boxImager"
                                          ]
                                        }
                                      ],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "Create"
                                              },
                                              "parameters": [
                                                "",
                                                "boxImage",
                                                "0",
                                                "0",
                                                "\"\""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ChangePlan"
                                              },
                                              "parameters": [
                                                "boxImage",
                                                "=",
                                                "box.ZOrder()+1"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ChangeHeight"
                                              },
                                              "parameters": [
                                                "boxImage",
                                                "=",
                                                "box.Height()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ChangeWidth"
                                              },
                                              "parameters": [
                                                "boxImage",
                                                "=",
                                                "box.Width()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "SetAngle"
                                              },
                                              "parameters": [
                                                "boxImage",
                                                "=",
                                                "box.Angle()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "MettreXY"
                                              },
                                              "parameters": [
                                                "boxImage",
                                                "=",
                                                "box.X()",
                                                "=",
                                                "box.Y()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "LinkedObjects::LinkObjects"
                                              },
                                              "parameters": [
                                                "",
                                                "box",
                                                "boxImage"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "LinkedObjects::LinkObjects"
                                              },
                                              "parameters": [
                                                "",
                                                "boxImager",
                                                "boxImage"
                                              ]
                                            }
                                          ],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "VarSceneTxt"
                                                  },
                                                  "parameters": [
                                                    "boxData.anm.object.imgURL",
                                                    "!=",
                                                    "\"0\""
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "VarSceneTxt"
                                                  },
                                                  "parameters": [
                                                    "boxData.anm.object.imgURL",
                                                    "!=",
                                                    "\"\""
                                                  ]
                                                }
                                              ],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "ResourceLoadingTools::LoadURLIntoSprite"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "VariableString(boxData.anm.object.imgURL)",
                                                    "boxImage",
                                                    "",
                                                    "yes",
                                                    ""
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "parameters": []
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::ForEachChildVariable",
                                  "iterableVariableName": "boxData.node",
                                  "valueIteratorVariableName": "node",
                                  "keyIteratorVariableName": "",
                                  "conditions": [],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Create"
                                          },
                                          "parameters": [
                                            "",
                                            "node",
                                            "Variable(node.phys.X)",
                                            "Variable(node.phys.Y)",
                                            "\"GUI\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "LinkedObjects::LinkObjects"
                                          },
                                          "parameters": [
                                            "",
                                            "box",
                                            "node"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "JSONToObjectVariableStructure"
                                          },
                                          "parameters": [
                                            "ToJSON(node)",
                                            "node",
                                            "data"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangeHeight"
                                          },
                                          "parameters": [
                                            "node",
                                            "=",
                                            "32"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangeWidth"
                                          },
                                          "parameters": [
                                            "node",
                                            "=",
                                            "(timeline.Width()/ToNumber(timeLength.Text()))*(Variable(node.anm.timeline.length))"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Snap to grid",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "DraggableBehavior::Dragged"
                      },
                      "parameters": [
                        "box",
                        "Draggable"
                      ]
                    },
                    {
                      "type": {
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "LShift"
                      ]
                    },
                    {
                      "type": {
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "s"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SnapToGrid::SnapObjectToVirtualGrid"
                      },
                      "parameters": [
                        "",
                        "box",
                        "32",
                        "32",
                        "0",
                        "0",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Delete boxes",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "gettingSupported",
                        "False"
                      ]
                    },
                    {
                      "type": {
                        "value": "KeyReleased"
                      },
                      "parameters": [
                        "",
                        "Delete"
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Not"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "controlPLate",
                            "",
                            "",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "LinkedObjects::PickObjectsLinkedTo"
                          },
                          "parameters": [
                            "",
                            "node",
                            "box",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "node",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "LinkedObjects::PickObjectsLinkedTo"
                          },
                          "parameters": [
                            "",
                            "boxSupporters",
                            "box",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "boxSupporters",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "her",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "deleteChangeUI",
                            "True"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "box",
                            ""
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": true,
              "folded": true,
              "name": "Copy da box",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "box",
                        "",
                        "",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "gettingSupported",
                        "False"
                      ]
                    },
                    {
                      "type": {
                        "value": "KeyReleased"
                      },
                      "parameters": [
                        "",
                        "c"
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "="
                      ]
                    },
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "followm",
                        "="
                      ]
                    },
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "box",
                        "MouseX()",
                        "MouseY()",
                        "\"\""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "followm",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeScale"
                      },
                      "parameters": [
                        "box",
                        "=",
                        "4"
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Nodes",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Selecting nodes",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "timeline",
                        "",
                        "",
                        ""
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "MouseButtonPressed"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Once"
                          },
                          "parameters": []
                        },
                        {
                          "type": {
                            "inverted": true,
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "node",
                            "",
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "inverted": true,
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "LShift"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "node",
                            "selected",
                            "False"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "ObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "node",
                                "her",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "deleteChangeUI",
                                "True"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": []
                }
              ],
              "parameters": []
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "folded": true,
          "name": "Box supporters",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Size",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "Click::click"
                          },
                          "parameters": [
                            "",
                            "Left",
                            "boxSupporters",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "boxSupporters",
                            "",
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "AnimationName"
                          },
                          "parameters": [
                            "boxSupporters",
                            "\"Size\""
                          ]
                        },
                        {
                          "type": {
                            "value": "LinkedObjects::PickObjectsLinkedTo"
                          },
                          "parameters": [
                            "",
                            "box",
                            "boxSupporters",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "inverted": true,
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "LAlt"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "changingBoxSize",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "changingBoxSize",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "boxSupporters",
                            "gettingSupported",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "gettingSupported",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeScale"
                          },
                          "parameters": [
                            "boxSupporters",
                            "=",
                            "6"
                          ]
                        },
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "supporterGuideText",
                            "box.X()",
                            "box.Y()",
                            "\"\""
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangePlan"
                          },
                          "parameters": [
                            "supporterGuideText",
                            "=",
                            "200"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "changingBoxSize",
                            "False"
                          ]
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Once"
                          },
                          "parameters": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "supporterGuideText",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "changingBoxSize",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "selected",
                            "True"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "ObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "box",
                                "changingBoxSize",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "PrimitiveDrawing::Circle"
                              },
                              "parameters": [
                                "supporterGuide",
                                "box.X()",
                                "box.Y()",
                                "sqrt(pow(box.Height(), 2)+pow(box.Width(), 2))/2"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "KeyPressed"
                                  },
                                  "parameters": [
                                    "",
                                    "LControl"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ChangeHeight"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "YFromAngleAndDistance(AngleBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())-box.Angle(), DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY()))*2"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ChangeWidth"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "XFromAngleAndDistance(AngleBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())-box.Angle(), DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY()))*2"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "KeyPressed"
                                  },
                                  "parameters": [
                                    "",
                                    "LShift"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ChangeHeight"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "YFromAngleAndDistance(45, DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())/1)*2"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ChangeWidth"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "XFromAngleAndDistance(45, DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())/1)*2"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "KeyPressed"
                                  },
                                  "parameters": [
                                    "",
                                    "LControl"
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "BuiltinCommonInstructions::Once"
                                      },
                                      "parameters": []
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ChangeHeight"
                                      },
                                      "parameters": [
                                        "box",
                                        "=",
                                        "YFromAngleAndDistance(AngleBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())-box.Angle(), DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())/1)*2"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeWidth"
                                      },
                                      "parameters": [
                                        "box",
                                        "=",
                                        "XFromAngleAndDistance(AngleBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())-box.Angle(), DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())/1)*2"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarScene"
                                      },
                                      "parameters": [
                                        "temp.anSize",
                                        "=",
                                        "AngleBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())-box.Angle()"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ChangeHeight"
                                      },
                                      "parameters": [
                                        "box",
                                        "=",
                                        "YFromAngleAndDistance(Variable(temp.anSize), DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())/1)*2"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeWidth"
                                      },
                                      "parameters": [
                                        "box",
                                        "=",
                                        "XFromAngleAndDistance(Variable(temp.anSize), DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())/1)*2"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ModVarScene"
                                  },
                                  "parameters": [
                                    "temp.h",
                                    "=",
                                    "box.Height()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarScene"
                                  },
                                  "parameters": [
                                    "temp.w",
                                    "=",
                                    "box.Width()"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "MettreXY"
                                  },
                                  "parameters": [
                                    "supporterGuideText",
                                    "=",
                                    "MouseX()",
                                    "=",
                                    "MouseY()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "BBText::SetBBText"
                                  },
                                  "parameters": [
                                    "supporterGuideText",
                                    "=",
                                    "\"[outline=black]\"+\" W:\"+ToString(round(box.Width()))+\" H:\"+ToString(round(box.Height()))+\"[/outline]\""
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "box",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ChangeHeight"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "Variable(temp.h)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ChangeWidth"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "Variable(temp.w)"
                                  ]
                                }
                              ]
                            },
                            {
                              "disabled": true,
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "KeyPressed"
                                  },
                                  "parameters": [
                                    "",
                                    "LControl"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SetAngle"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "Variable(temp.an)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "PrimitiveDrawing::LineV2"
                                  },
                                  "parameters": [
                                    "supporterGuide",
                                    "box.X()",
                                    "box.Y()",
                                    "MouseX()",
                                    "MouseY()",
                                    "4"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Angle",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "Click::click"
                          },
                          "parameters": [
                            "",
                            "Left",
                            "boxSupporters",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "boxSupporters",
                            "",
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "AnimationName"
                          },
                          "parameters": [
                            "boxSupporters",
                            "\"Angle\""
                          ]
                        },
                        {
                          "type": {
                            "value": "LinkedObjects::PickObjectsLinkedTo"
                          },
                          "parameters": [
                            "",
                            "box",
                            "boxSupporters",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "inverted": true,
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "LAlt"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "changingBoxAngle",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "changingBoxAngle",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "gettingSupported",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeScale"
                          },
                          "parameters": [
                            "boxSupporters",
                            "=",
                            "6"
                          ]
                        },
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "supporterGuideText",
                            "box.X()",
                            "box.Y()",
                            "\"\""
                          ]
                        },
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "boxSupporters",
                            "gettingSupported",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangePlan"
                          },
                          "parameters": [
                            "supporterGuideText",
                            "=",
                            "200"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "changingBoxAngle",
                            "True"
                          ]
                        },
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "selected",
                            "True"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "ObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "box",
                                "changingBoxAngle",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetAngle"
                              },
                              "parameters": [
                                "box",
                                "=",
                                "WrapNumber::WrapNumber(AngleBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())-AngleBetweenPositions(0, 0, -(box.Width()/2), -(box.Height()/2)),-180,180)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "temp.an",
                                "=",
                                "box.Angle()"
                              ]
                            },
                            {
                              "type": {
                                "value": "PrimitiveDrawing::Circle"
                              },
                              "parameters": [
                                "supporterGuide",
                                "box.X()",
                                "box.Y()",
                                "DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "box",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SetAngle"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "Variable(temp.an)"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "KeyPressed"
                                  },
                                  "parameters": [
                                    "",
                                    "LControl"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SetAngle"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "WrapNumber::WrapNumber(AngleBetweenPositions(box.X(), box.Y(), MouseX(), MouseY())-AngleBetweenPositions(0, 0, -(box.Width()/2), -(box.Height()/2)),-180,180)"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "KeyPressed"
                                  },
                                  "parameters": [
                                    "",
                                    "LShift"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SetAngle"
                                  },
                                  "parameters": [
                                    "box",
                                    "=",
                                    "WrapNumber::WrapNumber(round(box.Angle()/5)*5,-180,180)"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "ObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "box",
                                "changingBoxAngle",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "PrimitiveDrawing::LineV2"
                              },
                              "parameters": [
                                "supporterGuide",
                                "box.X()",
                                "box.Y()",
                                "XFromAngleAndDistance(box.Angle(), DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY()))+box.X()",
                                "YFromAngleAndDistance(box.Angle(), DistanceBetweenPositions(box.X(), box.Y(), MouseX(), MouseY()))+box.Y()",
                                "4"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "MettreXY"
                                  },
                                  "parameters": [
                                    "supporterGuideText",
                                    "=",
                                    "MouseX()",
                                    "=",
                                    "MouseY()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "BBText::SetBBText"
                                  },
                                  "parameters": [
                                    "supporterGuideText",
                                    "=",
                                    "\"[outline=black]\"+ToString(roundTo(box.Angle(), 2))+\"°[/outline]\""
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Label for position when moving",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "DraggableBehavior::Dragged"
                          },
                          "parameters": [
                            "box",
                            "Draggable"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "MettreXY"
                          },
                          "parameters": [
                            "supporterGuideText",
                            "=",
                            "MouseX()",
                            "=",
                            "MouseY()"
                          ]
                        },
                        {
                          "type": {
                            "value": "BBText::SetBBText"
                          },
                          "parameters": [
                            "supporterGuideText",
                            "=",
                            "\"[outline=black]\"+\" X:\"+ToString(round(box.X()))+\" Y:\"+ToString(round(box.Y()))+\"[/outline]\""
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "BuiltinCommonInstructions::Once"
                              },
                              "parameters": []
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "Create"
                              },
                              "parameters": [
                                "",
                                "supporterGuideText",
                                "box.X()",
                                "box.Y()",
                                "\"\""
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangePlan"
                              },
                              "parameters": [
                                "supporterGuideText",
                                "=",
                                "200"
                              ]
                            },
                            {
                              "type": {
                                "value": "BBText::SetWordWrap"
                              },
                              "parameters": [
                                "supporterGuideText",
                                ""
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": []
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "MouseButtonReleased"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "changingBoxAngle",
                    "False"
                  ]
                },
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "box",
                    "changingBoxAngle",
                    "False"
                  ]
                },
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "changingBoxSize",
                    "False"
                  ]
                },
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "box",
                    "changingBoxSize",
                    "False"
                  ]
                },
                {
                  "type": {
                    "value": "ChangeScale"
                  },
                  "parameters": [
                    "boxSupporters",
                    "=",
                    "4"
                  ]
                },
                {
                  "type": {
                    "value": "Delete"
                  },
                  "parameters": [
                    "supporterGuideText",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "gettingSupported",
                    "False"
                  ]
                },
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "boxSupporters",
                    "gettingSupported",
                    "False"
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "folded": true,
          "name": "Timeline events",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "Click::click"
                  },
                  "parameters": [
                    "",
                    "Left",
                    "play",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ToggleSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "playing"
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "MouseButtonReleased"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "changingTimeCursor",
                    "False"
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "SceneVariableAsBoolean"
                  },
                  "parameters": [
                    "playing",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ChangeAnimation"
                  },
                  "parameters": [
                    "play",
                    "=",
                    "0"
                  ]
                },
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "node",
                    "played",
                    "False"
                  ]
                }
              ],
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "MouseButtonPressed"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Once"
                      },
                      "parameters": []
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Not"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "timeline",
                            "",
                            "",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": {
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "timeCursor",
                        "",
                        "",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "changingTimeCursor",
                        "True"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "changingTimeCursor",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreX"
                      },
                      "parameters": [
                        "timeCursor",
                        "=",
                        "clamp(MouseX(\"GUI\", 0), timeline.X(), timeline.X()+timeline.Width())"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "SceneVariableAsBoolean"
                  },
                  "parameters": [
                    "playing",
                    "True"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ChangeAnimation"
                  },
                  "parameters": [
                    "play",
                    "=",
                    "1"
                  ]
                },
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "changingTimeCursor",
                    "False"
                  ]
                }
              ],
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "TextInput::TextInputObject::Text"
                      },
                      "parameters": [
                        "timeLength",
                        "=",
                        "\"\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "TextInput::TextInputObject::SetText"
                      },
                      "parameters": [
                        "timeLength",
                        "=",
                        "\"0\""
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreX"
                      },
                      "parameters": [
                        "timeCursor",
                        "+",
                        "timeline.Width()/ToNumber(timeLength.Text())*TimeDelta()"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "PosX"
                      },
                      "parameters": [
                        "timeCursor",
                        ">",
                        "timeline.X() + timeline.Width()"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreX"
                      },
                      "parameters": [
                        "timeCursor",
                        "=",
                        "timeline.X()"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "node",
                        "played",
                        "False"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "PosX"
                      },
                      "parameters": [
                        "timeCursor",
                        "<",
                        "timeline.X() - 16"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreX"
                      },
                      "parameters": [
                        "timeCursor",
                        "=",
                        "timeline.X()"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "node",
                        "played",
                        "False"
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": true,
                  "folded": true,
                  "name": "actually",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "PosX"
                          },
                          "parameters": [
                            "timeCursor",
                            ">",
                            ""
                          ]
                        }
                      ],
                      "actions": []
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Saving the project",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "Click::click"
                  },
                  "parameters": [
                    "",
                    "Left",
                    "saveSkel",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "VariableClearChildren"
                  },
                  "parameters": [
                    "saveData"
                  ]
                }
              ],
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "box",
                  "conditions": [],
                  "actions": [],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "ObjectVariableClearChildren"
                              },
                              "parameters": [
                                "box",
                                "data.node"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.position.Y",
                                "=",
                                "box.Y()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.position.X",
                                "=",
                                "box.X()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.width",
                                "=",
                                "box.Width()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.height",
                                "=",
                                "box.Height()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.angle",
                                "=",
                                "box.Angle()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.opacity",
                                "=",
                                "box.Opacity()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.flippedHor",
                                "=",
                                "0"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.flippedVer",
                                "=",
                                "0"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                  },
                                  "parameters": [
                                    "",
                                    "boxImage",
                                    "box",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "FlippedX"
                                      },
                                      "parameters": [
                                        "boxImage"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "box",
                                        "data.anm.flippedHor",
                                        "=",
                                        "1"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "FlippedY"
                                      },
                                      "parameters": [
                                        "boxImage"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "box",
                                        "data.anm.flippedVer",
                                        "=",
                                        "1"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "folded": true,
                          "name": "UUID, checking if another object also has the same UUID",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "VariableChildExists"
                                  },
                                  "parameters": [
                                    "saveData.box",
                                    "box.VariableString(data.anm.object.UUID)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.object.UUID",
                                    "=",
                                    "UUID::GenerateUUIDv4()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "JSONToVariableStructure"
                                  },
                                  "parameters": [
                                    "ObjectVarToJSON(box, data)",
                                    "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "VariableChildExists"
                                  },
                                  "parameters": [
                                    "saveData.box",
                                    "box.VariableString(data.anm.object.UUID)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "JSONToVariableStructure"
                                  },
                                  "parameters": [
                                    "ObjectVarToJSON(box, data)",
                                    "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                  ]
                                }
                              ]
                            }
                          ],
                          "parameters": []
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Project settings and saving",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Clipboard::WriteText"
                          },
                          "parameters": [
                            "",
                            "ToJSON(saveData)",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "VariableClearChildren"
                      },
                      "parameters": [
                        "saveData"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::ForEach",
                      "object": "box",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ObjectVariableClearChildren"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.node"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.position.Y",
                                    "=",
                                    "box.Y()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.position.X",
                                    "=",
                                    "box.X()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.width",
                                    "=",
                                    "box.Width()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.height",
                                    "=",
                                    "box.Height()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.angle",
                                    "=",
                                    "box.Angle()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.opacity",
                                    "=",
                                    "box.Opacity()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.flippedHor",
                                    "=",
                                    "0"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.flippedVer",
                                    "=",
                                    "0"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "LinkedObjects::PickObjectsLinkedTo"
                                      },
                                      "parameters": [
                                        "",
                                        "boxImage",
                                        "box",
                                        ""
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "FlippedX"
                                          },
                                          "parameters": [
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm.flippedHor",
                                            "=",
                                            "1"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "FlippedY"
                                          },
                                          "parameters": [
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm.flippedVer",
                                            "=",
                                            "1"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                  },
                                  "parameters": [
                                    "",
                                    "node",
                                    "box",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::ForEach",
                                  "object": "node",
                                  "conditions": [],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.anm.timeline.start",
                                            "=",
                                            "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.anm.timeline.length",
                                            "=",
                                            "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.phys.X",
                                            "=",
                                            "node.X()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.phys.Y",
                                            "=",
                                            "node.Y()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "JSONToVariableStructure"
                                          },
                                          "parameters": [
                                            "ObjectVarToJSON(node, data)",
                                            "nodeSaveData"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ObjectVariablePush"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.node",
                                            "nodeSaveData"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "folded": true,
                              "name": "UUID, checking if another object also has the same UUID",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VariableChildExists"
                                      },
                                      "parameters": [
                                        "saveData.box",
                                        "box.VariableString(data.anm.object.UUID)"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "box",
                                        "data.anm.object.UUID",
                                        "=",
                                        "UUID::GenerateUUIDv4()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(box, data)",
                                        "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "inverted": true,
                                        "value": "VariableChildExists"
                                      },
                                      "parameters": [
                                        "saveData.box",
                                        "box.VariableString(data.anm.object.UUID)"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(box, data)",
                                        "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "name": "Project settings and saving",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "LireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/SaveList\"",
                                "\"saveList\"",
                                "GlobalVarToJSON(saveList)",
                                "saveListJSON"
                              ]
                            },
                            {
                              "type": {
                                "value": "JSONToVariableStructure"
                              },
                              "parameters": [
                                "VariableString(saveListJSON)",
                                "saveList"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "saveData.settings.time",
                                "=",
                                "ToNumber(timeLength.Text())"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.saveTime",
                                "=",
                                "ToString(Time(\"mday\"))+\" \"+GlobalVariableString(months[Time(\"mon\")])+\", 20\"+SubStr(ToString(Time(\"year\")), 1, 2)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.saveTimeSmall",
                                "=",
                                "ToString(Time(\"hour\"))+\":\"+ToString(Time(\"min\"))"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.name",
                                "=",
                                "projectName.Text()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.version",
                                "=",
                                "GlobalVariableString(version[0])+\".\"+GlobalVariableString(version[1])+\".\"+GlobalVariableString(version[2])"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "EcrireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/LastSave\"",
                                "\"lastSave\"",
                                "ToJSON(saveData)"
                              ]
                            },
                            {
                              "type": {
                                "value": "SceneVariablePush"
                              },
                              "parameters": [
                                "saveList",
                                "saveData"
                              ]
                            },
                            {
                              "type": {
                                "value": "EcrireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/SaveList\"",
                                "\"saveList\"",
                                "ToJSON(saveList)"
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    }
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "Click::click"
                  },
                  "parameters": [
                    "",
                    "Left",
                    "saveAnim",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "VariableClearChildren"
                  },
                  "parameters": [
                    "saveData"
                  ]
                }
              ],
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "saveData.settings.loop",
                        "False"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "box",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "VariableClearChildren"
                      },
                      "parameters": [
                        "nodeList"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "LinkedObjects::PickObjectsLinkedTo"
                              },
                              "parameters": [
                                "",
                                "node",
                                "box",
                                ""
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::ForEach",
                              "object": "node",
                              "conditions": [],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.timeline.start",
                                        "=",
                                        "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.timeline.length",
                                        "=",
                                        "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(node, data)",
                                        "nodeSaveData"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "SceneVariablePush"
                                      },
                                      "parameters": [
                                        "nodeList",
                                        "nodeSaveData"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "name": "UUID, checking if another object also has the same UUID",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "VariableChildExists"
                                  },
                                  "parameters": [
                                    "saveData.box",
                                    "box.VariableString(data.anm.object.UUID)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.object.UUID",
                                    "=",
                                    "UUID::GenerateUUIDv4()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "JSONToVariableStructure"
                                  },
                                  "parameters": [
                                    "ToJSON(nodeList)",
                                    "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "VariableChildExists"
                                  },
                                  "parameters": [
                                    "saveData.box",
                                    "box.VariableString(data.anm.object.UUID)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "JSONToVariableStructure"
                                  },
                                  "parameters": [
                                    "ToJSON(nodeList)",
                                    "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                  ]
                                }
                              ]
                            }
                          ],
                          "parameters": []
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Project settings and saving",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "saveData.settings.time",
                            "=",
                            "ToNumber(timeLength.Text())"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Clipboard::WriteText"
                          },
                          "parameters": [
                            "",
                            "ToJSON(saveData)",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "VariableClearChildren"
                      },
                      "parameters": [
                        "saveData"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::ForEach",
                      "object": "box",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ObjectVariableClearChildren"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.node"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.position.Y",
                                    "=",
                                    "box.Y()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.position.X",
                                    "=",
                                    "box.X()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.width",
                                    "=",
                                    "box.Width()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.height",
                                    "=",
                                    "box.Height()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.angle",
                                    "=",
                                    "box.Angle()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.opacity",
                                    "=",
                                    "box.Opacity()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.flippedHor",
                                    "=",
                                    "0"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.flippedVer",
                                    "=",
                                    "0"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "LinkedObjects::PickObjectsLinkedTo"
                                      },
                                      "parameters": [
                                        "",
                                        "boxImage",
                                        "box",
                                        ""
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "FlippedX"
                                          },
                                          "parameters": [
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm.flippedHor",
                                            "=",
                                            "1"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "FlippedY"
                                          },
                                          "parameters": [
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm.flippedVer",
                                            "=",
                                            "1"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                  },
                                  "parameters": [
                                    "",
                                    "node",
                                    "box",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::ForEach",
                                  "object": "node",
                                  "conditions": [],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.anm.timeline.start",
                                            "=",
                                            "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.anm.timeline.length",
                                            "=",
                                            "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.phys.X",
                                            "=",
                                            "node.X()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.phys.Y",
                                            "=",
                                            "node.Y()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "JSONToVariableStructure"
                                          },
                                          "parameters": [
                                            "ObjectVarToJSON(node, data)",
                                            "nodeSaveData"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ObjectVariablePush"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.node",
                                            "nodeSaveData"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "folded": true,
                              "name": "UUID, checking if another object also has the same UUID",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VariableChildExists"
                                      },
                                      "parameters": [
                                        "saveData.box",
                                        "box.VariableString(data.anm.object.UUID)"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "box",
                                        "data.anm.object.UUID",
                                        "=",
                                        "UUID::GenerateUUIDv4()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(box, data)",
                                        "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "inverted": true,
                                        "value": "VariableChildExists"
                                      },
                                      "parameters": [
                                        "saveData.box",
                                        "box.VariableString(data.anm.object.UUID)"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(box, data)",
                                        "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "name": "Project settings and saving",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "LireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/SaveList\"",
                                "\"saveList\"",
                                "GlobalVarToJSON(saveList)",
                                "saveListJSON"
                              ]
                            },
                            {
                              "type": {
                                "value": "JSONToVariableStructure"
                              },
                              "parameters": [
                                "VariableString(saveListJSON)",
                                "saveList"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "saveData.settings.time",
                                "=",
                                "ToNumber(timeLength.Text())"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.saveTime",
                                "=",
                                "ToString(Time(\"mday\"))+\" \"+GlobalVariableString(months[Time(\"mon\")])+\", 20\"+SubStr(ToString(Time(\"year\")), 1, 2)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.saveTimeSmall",
                                "=",
                                "ToString(Time(\"hour\"))+\":\"+ToString(Time(\"min\"))"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.name",
                                "=",
                                "projectName.Text()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.version",
                                "=",
                                "GlobalVariableString(version[0])+\".\"+GlobalVariableString(version[1])+\".\"+GlobalVariableString(version[2])"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "EcrireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/LastSave\"",
                                "\"lastSave\"",
                                "ToJSON(saveData)"
                              ]
                            },
                            {
                              "type": {
                                "value": "SceneVariablePush"
                              },
                              "parameters": [
                                "saveList",
                                "saveData"
                              ]
                            },
                            {
                              "type": {
                                "value": "EcrireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/SaveList\"",
                                "\"saveList\"",
                                "ToJSON(saveList)"
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    }
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "Click::click"
                  },
                  "parameters": [
                    "",
                    "Left",
                    "home",
                    ""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "LShift"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "VariableClearChildren"
                      },
                      "parameters": [
                        "saveData"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::ForEach",
                      "object": "box",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ObjectVariableClearChildren"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.node"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.position.Y",
                                    "=",
                                    "box.Y()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.position.X",
                                    "=",
                                    "box.X()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.width",
                                    "=",
                                    "box.Width()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.height",
                                    "=",
                                    "box.Height()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.angle",
                                    "=",
                                    "box.Angle()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.opacity",
                                    "=",
                                    "box.Opacity()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.flippedHor",
                                    "=",
                                    "0"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.flippedVer",
                                    "=",
                                    "0"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "LinkedObjects::PickObjectsLinkedTo"
                                      },
                                      "parameters": [
                                        "",
                                        "boxImage",
                                        "box",
                                        ""
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "FlippedX"
                                          },
                                          "parameters": [
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm.flippedHor",
                                            "=",
                                            "1"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "FlippedY"
                                          },
                                          "parameters": [
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm.flippedVer",
                                            "=",
                                            "1"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                  },
                                  "parameters": [
                                    "",
                                    "node",
                                    "box",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::ForEach",
                                  "object": "node",
                                  "conditions": [],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.anm.timeline.start",
                                            "=",
                                            "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.anm.timeline.length",
                                            "=",
                                            "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.phys.X",
                                            "=",
                                            "node.X()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.phys.Y",
                                            "=",
                                            "node.Y()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "JSONToVariableStructure"
                                          },
                                          "parameters": [
                                            "ObjectVarToJSON(node, data)",
                                            "nodeSaveData"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ObjectVariablePush"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.node",
                                            "nodeSaveData"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "folded": true,
                              "name": "UUID, checking if another object also has the same UUID",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VariableChildExists"
                                      },
                                      "parameters": [
                                        "saveData.box",
                                        "box.VariableString(data.anm.object.UUID)"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "box",
                                        "data.anm.object.UUID",
                                        "=",
                                        "UUID::GenerateUUIDv4()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(box, data)",
                                        "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "inverted": true,
                                        "value": "VariableChildExists"
                                      },
                                      "parameters": [
                                        "saveData.box",
                                        "box.VariableString(data.anm.object.UUID)"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(box, data)",
                                        "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "name": "Project settings and saving",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "LireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/SaveList\"",
                                "\"saveList\"",
                                "GlobalVarToJSON(saveList)",
                                "saveListJSON"
                              ]
                            },
                            {
                              "type": {
                                "value": "JSONToVariableStructure"
                              },
                              "parameters": [
                                "VariableString(saveListJSON)",
                                "saveList"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "saveData.settings.time",
                                "=",
                                "ToNumber(timeLength.Text())"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.saveTime",
                                "=",
                                "ToString(Time(\"mday\"))+\" \"+GlobalVariableString(months[Time(\"mon\")])+\", 20\"+SubStr(ToString(Time(\"year\")), 1, 2)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.saveTimeSmall",
                                "=",
                                "ToString(Time(\"hour\"))+\":\"+ToString(Time(\"min\"))"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.name",
                                "=",
                                "projectName.Text()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarSceneTxt"
                              },
                              "parameters": [
                                "saveData.settings.version",
                                "=",
                                "GlobalVariableString(version[0])+\".\"+GlobalVariableString(version[1])+\".\"+GlobalVariableString(version[2])"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "EcrireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/LastSave\"",
                                "\"lastSave\"",
                                "ToJSON(saveData)"
                              ]
                            },
                            {
                              "type": {
                                "value": "SceneVariablePush"
                              },
                              "parameters": [
                                "saveList",
                                "saveData"
                              ]
                            },
                            {
                              "type": {
                                "value": "EcrireFichierTxt"
                              },
                              "parameters": [
                                "\"Root/Save/SaveList\"",
                                "\"saveList\"",
                                "ToJSON(saveList)"
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "Scene"
                      },
                      "parameters": [
                        "",
                        "\"menu\"",
                        ""
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "Click::click"
                  },
                  "parameters": [
                    "",
                    "Left",
                    "save",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "VariableClearChildren"
                  },
                  "parameters": [
                    "saveData"
                  ]
                }
              ],
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "box",
                  "conditions": [],
                  "actions": [],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "ObjectVariableClearChildren"
                              },
                              "parameters": [
                                "box",
                                "data.node"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.position.Y",
                                "=",
                                "box.Y()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.position.X",
                                "=",
                                "box.X()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.width",
                                "=",
                                "box.Width()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.height",
                                "=",
                                "box.Height()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.angle",
                                "=",
                                "box.Angle()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.opacity",
                                "=",
                                "box.Opacity()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.flippedHor",
                                "=",
                                "0"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.flippedVer",
                                "=",
                                "0"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                  },
                                  "parameters": [
                                    "",
                                    "boxImage",
                                    "box",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "FlippedX"
                                      },
                                      "parameters": [
                                        "boxImage"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "box",
                                        "data.anm.flippedHor",
                                        "=",
                                        "1"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "FlippedY"
                                      },
                                      "parameters": [
                                        "boxImage"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "box",
                                        "data.anm.flippedVer",
                                        "=",
                                        "1"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "LinkedObjects::PickObjectsLinkedTo"
                              },
                              "parameters": [
                                "",
                                "node",
                                "box",
                                ""
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::ForEach",
                              "object": "node",
                              "conditions": [],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.timeline.start",
                                        "=",
                                        "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.timeline.length",
                                        "=",
                                        "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.phys.X",
                                        "=",
                                        "node.X()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.phys.Y",
                                        "=",
                                        "node.Y()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "JSONToVariableStructure"
                                      },
                                      "parameters": [
                                        "ObjectVarToJSON(node, data)",
                                        "nodeSaveData"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ObjectVariablePush"
                                      },
                                      "parameters": [
                                        "box",
                                        "data.node",
                                        "nodeSaveData"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "folded": true,
                          "name": "UUID, checking if another object also has the same UUID",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "VariableChildExists"
                                  },
                                  "parameters": [
                                    "saveData.box",
                                    "box.VariableString(data.anm.object.UUID)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "box",
                                    "data.anm.object.UUID",
                                    "=",
                                    "UUID::GenerateUUIDv4()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "JSONToVariableStructure"
                                  },
                                  "parameters": [
                                    "ObjectVarToJSON(box, data)",
                                    "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "VariableChildExists"
                                  },
                                  "parameters": [
                                    "saveData.box",
                                    "box.VariableString(data.anm.object.UUID)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "JSONToVariableStructure"
                                  },
                                  "parameters": [
                                    "ObjectVarToJSON(box, data)",
                                    "saveData.box[box.VariableString(data.anm.object.UUID)]"
                                  ]
                                }
                              ]
                            }
                          ],
                          "parameters": []
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Project settings and saving",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "LireFichierTxt"
                          },
                          "parameters": [
                            "\"Root/Save/SaveList\"",
                            "\"saveList\"",
                            "GlobalVarToJSON(saveList)",
                            "saveListJSON"
                          ]
                        },
                        {
                          "type": {
                            "value": "JSONToVariableStructure"
                          },
                          "parameters": [
                            "VariableString(saveListJSON)",
                            "saveList"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "saveData.settings.time",
                            "=",
                            "ToNumber(timeLength.Text())"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarSceneTxt"
                          },
                          "parameters": [
                            "saveData.settings.saveTimeSmall",
                            "=",
                            "ToString(Time(\"hour\"))+\":\"+ToString(Time(\"min\"))"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarSceneTxt"
                          },
                          "parameters": [
                            "saveData.settings.saveTime",
                            "=",
                            "ToString(Time(\"mday\"))+\" \"+GlobalVariableString(months[Time(\"mon\")])+\", 20\"+SubStr(ToString(Time(\"year\")), 1, 2)"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarSceneTxt"
                          },
                          "parameters": [
                            "saveData.settings.name",
                            "=",
                            "projectName.Text()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarSceneTxt"
                          },
                          "parameters": [
                            "saveData.settings.version",
                            "=",
                            "GlobalVariableString(version[0])+\".\"+GlobalVariableString(version[1])+\".\"+GlobalVariableString(version[2])"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Clipboard::WriteText"
                          },
                          "parameters": [
                            "",
                            "ToJSON(saveData)",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "EcrireFichierTxt"
                          },
                          "parameters": [
                            "\"Root/Save/LastSave\"",
                            "\"lastSave\"",
                            "ToJSON(saveData)"
                          ]
                        },
                        {
                          "type": {
                            "value": "SceneVariablePush"
                          },
                          "parameters": [
                            "saveList",
                            "saveData"
                          ]
                        },
                        {
                          "type": {
                            "value": "EcrireFichierTxt"
                          },
                          "parameters": [
                            "\"Root/Save/SaveList\"",
                            "\"saveList\"",
                            "ToJSON(saveList)"
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "GlobalVariableAsBoolean"
                      },
                      "parameters": [
                        "saveLoaded",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "VariableClearChildren"
                      },
                      "parameters": [
                        "saveData"
                      ]
                    },
                    {
                      "type": {
                        "value": "JSONToVariableStructure"
                      },
                      "parameters": [
                        "GlobalVariableString(saveJSON)",
                        "saveData"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "TextInput::TextInputObject::SetText"
                          },
                          "parameters": [
                            "timeLength",
                            "=",
                            "VariableString(saveData.settings.time)"
                          ]
                        },
                        {
                          "type": {
                            "value": "TextInput::TextInputObject::SetText"
                          },
                          "parameters": [
                            "projectName",
                            "=",
                            "VariableString(saveData.settings.name)"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::ForEachChildVariable",
                      "iterableVariableName": "saveData.box",
                      "valueIteratorVariableName": "box",
                      "keyIteratorVariableName": "",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "Create"
                              },
                              "parameters": [
                                "",
                                "box",
                                "Variable(box.anm.position.X)",
                                "Variable(box.anm.position.Y)",
                                "\"\""
                              ]
                            },
                            {
                              "type": {
                                "value": "SetSize"
                              },
                              "parameters": [
                                "box",
                                "Variable(box.anm.width)",
                                "Variable(box.anm.height)"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetAngle"
                              },
                              "parameters": [
                                "box",
                                "=",
                                "Variable(box.anm.angle)"
                              ]
                            },
                            {
                              "type": {
                                "value": "Opacity"
                              },
                              "parameters": [
                                "box",
                                "=",
                                "Variable(box.anm.opacity)"
                              ]
                            },
                            {
                              "type": {
                                "value": "JSONToObjectVariableStructure"
                              },
                              "parameters": [
                                "ToJSON(box)",
                                "box",
                                "data"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "SceneVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "box.anm.flippedVer",
                                    "True"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipX"
                                  },
                                  "parameters": [
                                    "box",
                                    "yes"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "SceneVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "box.anm.flippedHor",
                                    "True"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipX"
                                  },
                                  "parameters": [
                                    "box",
                                    "yes"
                                  ]
                                }
                              ]
                            },
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "folded": true,
                              "name": "Images",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "Create"
                                      },
                                      "parameters": [
                                        "",
                                        "boxImager",
                                        "0",
                                        "0",
                                        "\"\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangePlan"
                                      },
                                      "parameters": [
                                        "boxImager",
                                        "=",
                                        "box.ZOrder()+1"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeHeight"
                                      },
                                      "parameters": [
                                        "boxImager",
                                        "=",
                                        "box.Height()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeWidth"
                                      },
                                      "parameters": [
                                        "boxImager",
                                        "=",
                                        "box.Width()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "SetAngle"
                                      },
                                      "parameters": [
                                        "boxImager",
                                        "=",
                                        "box.Angle()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "MettreXY"
                                      },
                                      "parameters": [
                                        "boxImager",
                                        "=",
                                        "box.X()",
                                        "=",
                                        "box.Y()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "LinkedObjects::LinkObjects"
                                      },
                                      "parameters": [
                                        "",
                                        "box",
                                        "boxImager"
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Create"
                                          },
                                          "parameters": [
                                            "",
                                            "boxImage",
                                            "0",
                                            "0",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangePlan"
                                          },
                                          "parameters": [
                                            "boxImage",
                                            "=",
                                            "box.ZOrder()+1"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangeHeight"
                                          },
                                          "parameters": [
                                            "boxImage",
                                            "=",
                                            "box.Height()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangeWidth"
                                          },
                                          "parameters": [
                                            "boxImage",
                                            "=",
                                            "box.Width()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "SetAngle"
                                          },
                                          "parameters": [
                                            "boxImage",
                                            "=",
                                            "box.Angle()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "MettreXY"
                                          },
                                          "parameters": [
                                            "boxImage",
                                            "=",
                                            "box.X()",
                                            "=",
                                            "box.Y()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "LinkedObjects::LinkObjects"
                                          },
                                          "parameters": [
                                            "",
                                            "box",
                                            "boxImage"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "LinkedObjects::LinkObjects"
                                          },
                                          "parameters": [
                                            "",
                                            "boxImager",
                                            "boxImage"
                                          ]
                                        }
                                      ],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "VarSceneTxt"
                                              },
                                              "parameters": [
                                                "box.anm.object.imgURL",
                                                "!=",
                                                "\"0\""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "VarSceneTxt"
                                              },
                                              "parameters": [
                                                "box.anm.object.imgURL",
                                                "!=",
                                                "\"\""
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ResourceLoadingTools::LoadURLIntoSprite"
                                              },
                                              "parameters": [
                                                "",
                                                "VariableString(box.anm.object.imgURL)",
                                                "boxImage",
                                                "",
                                                "yes",
                                                ""
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::ForEachChildVariable",
                              "iterableVariableName": "box.node",
                              "valueIteratorVariableName": "node",
                              "keyIteratorVariableName": "",
                              "conditions": [],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "Create"
                                      },
                                      "parameters": [
                                        "",
                                        "node",
                                        "Variable(node.phys.X)",
                                        "Variable(node.phys.Y)",
                                        "\"GUI\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "LinkedObjects::LinkObjects"
                                      },
                                      "parameters": [
                                        "",
                                        "box",
                                        "node"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "JSONToObjectVariableStructure"
                                      },
                                      "parameters": [
                                        "ToJSON(node)",
                                        "node",
                                        "data"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeHeight"
                                      },
                                      "parameters": [
                                        "node",
                                        "=",
                                        "32"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeWidth"
                                      },
                                      "parameters": [
                                        "node",
                                        "=",
                                        "(timeline.Width()/ToNumber(timeLength.Text()))*(Variable(node.anm.timeline.length))"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "folded": true,
          "name": "Tools and buttons for actions",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "tools",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "DepartScene"
                      },
                      "parameters": [
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "redSelectTool",
                        "tools.X()",
                        "tools.Y()",
                        "\"GUI\""
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangePlan"
                      },
                      "parameters": [
                        "redSelectTool",
                        "=",
                        "tools.ZOrder()+1"
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeHeight"
                      },
                      "parameters": [
                        "redSelectTool",
                        "=",
                        "tools.Height()"
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeWidth"
                      },
                      "parameters": [
                        "redSelectTool",
                        "=",
                        "tools.Width()"
                      ]
                    },
                    {
                      "type": {
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "tools",
                        "redSelectTool"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "tools",
                        "on",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      },
                      "parameters": [
                        "",
                        "redSelectTool",
                        "tools",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Montre"
                      },
                      "parameters": [
                        "redSelectTool",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "tools",
                        "on",
                        "False"
                      ]
                    },
                    {
                      "type": {
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      },
                      "parameters": [
                        "",
                        "redSelectTool",
                        "tools",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Cache"
                      },
                      "parameters": [
                        "redSelectTool"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Pen tool (tool for creating nodes easily)",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "Click::click"
                      },
                      "parameters": [
                        "",
                        "Left",
                        "tools",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "tools",
                        "",
                        "",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ToggleObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "tools",
                        "on"
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Move \"everything single thing that exists\" tools",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "Click::click"
                      },
                      "parameters": [
                        "",
                        "Left",
                        "moveNodeTool",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "movingEveryNode",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "MousePointerLock::RequestPointerLock"
                      },
                      "parameters": [
                        "",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "Click::click"
                      },
                      "parameters": [
                        "",
                        "Left",
                        "moveEverythingTool",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "movingEverything",
                        "True"
                      ]
                    },
                    {
                      "type": {
                        "value": "MousePointerLock::RequestPointerLock"
                      },
                      "parameters": [
                        "",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "movingEverything",
                        "False"
                      ]
                    },
                    {
                      "type": {
                        "value": "MousePointerLock::ExitPointerLock"
                      },
                      "parameters": [
                        "",
                        ""
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "movingEveryNode",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "movingEveryNode",
                            "False"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "node",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "MettreY"
                              },
                              "parameters": [
                                "node",
                                "=",
                                "round(node.Y()/32)*32"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Boxes, For each node event",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ChangePlan"
                  },
                  "parameters": [
                    "nodeDragGuide",
                    "=",
                    "1200"
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "SceneVariableAsBoolean"
                  },
                  "parameters": [
                    "playing",
                    "True"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "node",
                    "selected",
                    "False"
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "onNode",
                    "False"
                  ]
                },
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "node",
                    "onNode",
                    "False"
                  ]
                },
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "onExtender",
                    "False"
                  ]
                },
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "node",
                    "onExtender",
                    "False"
                  ]
                }
              ]
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "ObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "node",
                    "shown",
                    "True"
                  ]
                },
                {
                  "type": {
                    "value": "SourisSurObjet"
                  },
                  "parameters": [
                    "node",
                    "",
                    "",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "onNode",
                    "True"
                  ]
                },
                {
                  "type": {
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "node",
                    "onNode",
                    "True"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": []
            },
            {
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "box",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Box supporters",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "selected",
                            "True"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "folded": true,
                          "name": "Support",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "name": "Creating the suport handles",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "ObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "box",
                                        "supported",
                                        "False"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "SetObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "box",
                                        "supported",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Create"
                                          },
                                          "parameters": [
                                            "",
                                            "boxSupporters",
                                            "box.PointX(\"Angle\")",
                                            "box.PointY(\"Angle\")",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "SetAnimationName"
                                          },
                                          "parameters": [
                                            "boxSupporters",
                                            "\"Angle\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "LinkedObjects::LinkObjects"
                                          },
                                          "parameters": [
                                            "",
                                            "boxSupporters",
                                            "box"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangeScale"
                                          },
                                          "parameters": [
                                            "boxSupporters",
                                            "=",
                                            "4"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Create"
                                          },
                                          "parameters": [
                                            "",
                                            "boxSupporters",
                                            "box.PointX(\"Size\")",
                                            "box.PointY(\"Size\")",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "LinkedObjects::LinkObjects"
                                          },
                                          "parameters": [
                                            "",
                                            "boxSupporters",
                                            "box"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ChangeScale"
                                          },
                                          "parameters": [
                                            "boxSupporters",
                                            "=",
                                            "4"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            },
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "name": "Changing position of the handles based on what type of handle they are",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "LinkedObjects::PickObjectsLinkedTo"
                                      },
                                      "parameters": [
                                        "",
                                        "boxSupporters",
                                        "box",
                                        ""
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "SetAngle"
                                      },
                                      "parameters": [
                                        "boxSupporters",
                                        "=",
                                        "box.Angle()"
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "AnimationName"
                                          },
                                          "parameters": [
                                            "boxSupporters",
                                            "\"Size\""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "MettreXY"
                                          },
                                          "parameters": [
                                            "boxSupporters",
                                            "=",
                                            "box.PointX(\"Size\")",
                                            "=",
                                            "box.PointY(\"Size\")"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "AnimationName"
                                          },
                                          "parameters": [
                                            "boxSupporters",
                                            "\"Angle\""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "MettreXY"
                                          },
                                          "parameters": [
                                            "boxSupporters",
                                            "=",
                                            "box.PointX(\"Angle\")",
                                            "=",
                                            "box.PointY(\"Angle\")"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            }
                          ],
                          "parameters": []
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "movingEverything",
                                "True"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "MettreXY"
                                  },
                                  "parameters": [
                                    "box",
                                    "+",
                                    "MousePointerLock::MovementX()",
                                    "+",
                                    "MousePointerLock::MovementY()"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "For each node",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "LinkedObjects::PickObjectsLinkedTo"
                          },
                          "parameters": [
                            "",
                            "node",
                            "box",
                            ""
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "node",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "ObjectVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "box",
                                    "selected",
                                    "True"
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "movingEveryNode",
                                        "True"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "node",
                                        "selected",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "MettreX"
                                          },
                                          "parameters": [
                                            "node",
                                            "+",
                                            "MousePointerLock::MovementX()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "MettreY"
                                          },
                                          "parameters": [
                                            "node",
                                            "+",
                                            "MousePointerLock::MovementY()"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "movingEverything",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.anm.position.X",
                                            "+",
                                            "MousePointerLock::MovementX()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "data.anm.position.Y",
                                            "+",
                                            "MousePointerLock::MovementY()"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "colorB": 228,
                                  "colorG": 176,
                                  "colorR": 74,
                                  "creationTime": 0,
                                  "folded": true,
                                  "name": "Copying the node data for duplicating node",
                                  "source": "",
                                  "type": "BuiltinCommonInstructions::Group",
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "DraggableBehavior::Dragged"
                                          },
                                          "parameters": [
                                            "node",
                                            "Draggable"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "KeyPressed"
                                          },
                                          "parameters": [
                                            "",
                                            "LControl"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Once"
                                          },
                                          "parameters": []
                                        }
                                      ],
                                      "actions": [],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "data.anm.timeline.start",
                                                "=",
                                                "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "data.anm.timeline.length",
                                                "=",
                                                "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "data.phys.X",
                                                "=",
                                                "node.X()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "data.phys.Y",
                                                "=",
                                                "node.Y()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "JSONToVariableStructure"
                                              },
                                              "parameters": [
                                                "ObjectVarToJSON(node, data)",
                                                "nodeData"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "SetObjectVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "box",
                                                "createNodeCopy",
                                                "True"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "parameters": []
                                },
                                {
                                  "colorB": 228,
                                  "colorG": 176,
                                  "colorR": 74,
                                  "creationTime": 0,
                                  "folded": true,
                                  "name": "Check if cursor on node",
                                  "source": "",
                                  "type": "BuiltinCommonInstructions::Group",
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "LinkedObjects::PickObjectsLinkedTo"
                                          },
                                          "parameters": [
                                            "",
                                            "node",
                                            "box",
                                            ""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Or"
                                          },
                                          "parameters": [],
                                          "subInstructions": [
                                            {
                                              "type": {
                                                "value": "SourisSurObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "",
                                                "",
                                                ""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareNumbers"
                                              },
                                              "parameters": [
                                                "DistanceBetweenPositions(node.X()+node.Width(), node.CenterY(), MouseX(\"GUI\", 0), MouseY(\"GUI\", 0))",
                                                "<=",
                                                "8"
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "SetSceneVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "onNode",
                                            "True"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "SetObjectVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "node",
                                            "onNode",
                                            "True"
                                          ]
                                        }
                                      ],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareNumbers"
                                              },
                                              "parameters": [
                                                "DistanceBetweenPositions(node.X()+node.Width(), node.CenterY(), MouseX(\"GUI\", 0), MouseY(\"GUI\", 0))",
                                                "<=",
                                                "8"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "SetSceneVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "onExtender",
                                                "True"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "SetObjectVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "node",
                                                "onExtender",
                                                "True"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ActivateBehavior"
                                              },
                                              "parameters": [
                                                "node",
                                                "Draggable",
                                                "no"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "parameters": []
                                },
                                {
                                  "colorB": 228,
                                  "colorG": 176,
                                  "colorR": 74,
                                  "creationTime": 0,
                                  "name": "Selecting nodes",
                                  "source": "",
                                  "type": "BuiltinCommonInstructions::Group",
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "Click::click"
                                          },
                                          "parameters": [
                                            "",
                                            "Left",
                                            "node",
                                            ""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "SourisSurObjet"
                                          },
                                          "parameters": [
                                            "node",
                                            "",
                                            "",
                                            ""
                                          ]
                                        }
                                      ],
                                      "actions": [],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "AjoutObjConcern"
                                              },
                                              "parameters": [
                                                "",
                                                "node"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ObjectVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "node",
                                                "selected",
                                                "False"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "SetObjectVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "node",
                                                "her",
                                                ""
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "SetObjectVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "node",
                                                "selected",
                                                "True"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "SetObjectVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "node",
                                                "her",
                                                "True"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarSceneTxt"
                                              },
                                              "parameters": [
                                                "createChangeUIType",
                                                "=",
                                                "\"node\""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "SetSceneVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "createChangeUI",
                                                "True"
                                              ]
                                            }
                                          ],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "MettreXY"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "=",
                                                    "node.Variable(data.anm.position.X)",
                                                    "=",
                                                    "node.Variable(data.anm.position.Y)"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "ChangeHeight"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "=",
                                                    "node.Variable(data.anm.height)"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "ChangeWidth"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "=",
                                                    "node.Variable(data.anm.width)"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "SetAngle"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "=",
                                                    "node.Variable(data.anm.angle)"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "Opacity"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "=",
                                                    "node.Variable(data.anm.opacity)"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "ChangePlan"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "=",
                                                    "node.Variable(data.anm.zOrder)"
                                                  ]
                                                }
                                              ],
                                              "events": [
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.flippedVer",
                                                        "False"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipY"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "no"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.flippedVer",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipY"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "yes"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.flippedHor",
                                                        "False"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipX"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "no"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.flippedHor",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipX"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "yes"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "MouseButtonPressed"
                                          },
                                          "parameters": [
                                            "",
                                            "Left"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Once"
                                          },
                                          "parameters": []
                                        },
                                        {
                                          "type": {
                                            "value": "SourisSurObjet"
                                          },
                                          "parameters": [
                                            "timeline",
                                            "",
                                            "",
                                            ""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Not"
                                          },
                                          "parameters": [],
                                          "subInstructions": [
                                            {
                                              "type": {
                                                "value": "SourisSurObjet"
                                              },
                                              "parameters": [
                                                "node",
                                                "",
                                                "",
                                                ""
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "SetSceneVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "selectingNodes",
                                            "True"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "SceneVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "selectingNodes",
                                            "True"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "RTSUnitSelection::RTSUnitSelection"
                                          },
                                          "parameters": [
                                            "",
                                            "node",
                                            "nodeSelector",
                                            "\"GUI\"",
                                            "3",
                                            "a",
                                            "d",
                                            "Left",
                                            ""
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "RTSUnitSelection::IsSelected"
                                          },
                                          "parameters": [
                                            "",
                                            "node",
                                            ""
                                          ]
                                        }
                                      ],
                                      "actions": [],
                                      "events": [
                                        {
                                          "type": "BuiltinCommonInstructions::ForEach",
                                          "object": "node",
                                          "conditions": [],
                                          "actions": [],
                                          "events": [
                                            {
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "RTSUnitSelection::IsSelected"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "node",
                                                    ""
                                                  ]
                                                }
                                              ],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "SetObjectVariableAsBoolean"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "selected",
                                                    "True"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "RTSUnitSelection::SetSelected"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "node",
                                                    "",
                                                    ""
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "parameters": []
                                },
                                {
                                  "colorB": 228,
                                  "colorG": 176,
                                  "colorR": 74,
                                  "creationTime": 0,
                                  "folded": true,
                                  "name": "Extending nodes",
                                  "source": "",
                                  "type": "BuiltinCommonInstructions::Group",
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "MouseButtonPressed"
                                          },
                                          "parameters": [
                                            "",
                                            "Left"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Once"
                                          },
                                          "parameters": []
                                        },
                                        {
                                          "type": {
                                            "value": "ObjectVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "node",
                                            "onExtender",
                                            "True"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "SetObjectVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "node",
                                            "extending",
                                            "True"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "SetSceneVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "extendingNode",
                                            "True"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "ObjectVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "node",
                                            "extending",
                                            "True"
                                          ]
                                        }
                                      ],
                                      "actions": [],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "SceneVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "extendingNode",
                                                "True"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ChangeWidth"
                                              },
                                              "parameters": [
                                                "node",
                                                "=",
                                                "clamp(MouseX(\"GUI\", 0)-node.X(),0 ,timeline.X()+timeline.Width()-node.X()) "
                                              ]
                                            }
                                          ],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "KeyPressed"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "LShift"
                                                  ]
                                                }
                                              ],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "ChangeWidth"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "=",
                                                    "round(node.Width()/16)*16"
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "MouseButtonReleased"
                                              },
                                              "parameters": [
                                                "",
                                                "Left"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "SetObjectVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "node",
                                                "extending",
                                                "False"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "SetSceneVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "extendingNode",
                                                "False"
                                              ]
                                            }
                                          ],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "Width"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "<",
                                                    "2"
                                                  ]
                                                }
                                              ],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "Delete"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "node"
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "parameters": []
                                },
                                {
                                  "colorB": 228,
                                  "colorG": 176,
                                  "colorR": 74,
                                  "creationTime": 0,
                                  "folded": true,
                                  "name": "Effects for selecting nodes",
                                  "source": "",
                                  "type": "BuiltinCommonInstructions::Group",
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "SceneVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "playing",
                                            "False"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "EnableEffect"
                                          },
                                          "parameters": [
                                            "node",
                                            "\"select\"",
                                            "no"
                                          ]
                                        }
                                      ],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "ObjectVariableAsBoolean"
                                              },
                                              "parameters": [
                                                "node",
                                                "selected",
                                                "True"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "EnableEffect"
                                              },
                                              "parameters": [
                                                "node",
                                                "\"select\"",
                                                "yes"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "SceneVariableAsBoolean"
                                          },
                                          "parameters": [
                                            "playing",
                                            "True"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "EnableEffect"
                                          },
                                          "parameters": [
                                            "node",
                                            "\"select\"",
                                            "no"
                                          ]
                                        }
                                      ],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "PosX"
                                              },
                                              "parameters": [
                                                "node",
                                                "<=",
                                                "timeCursor.X()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "PosX"
                                              },
                                              "parameters": [
                                                "node",
                                                ">",
                                                "(timeCursor.X()-node.Width())"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "EnableEffect"
                                              },
                                              "parameters": [
                                                "node",
                                                "\"select\"",
                                                "yes"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "parameters": []
                                }
                              ]
                            },
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "folded": true,
                              "name": "Extend guide",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "ObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "node",
                                        "onNode",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "PrimitiveDrawing::Circle"
                                      },
                                      "parameters": [
                                        "nodeDragGuide",
                                        "node.X()+node.Width()",
                                        "node.CenterY()",
                                        "8"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            },
                            {
                              "colorB": 82,
                              "colorG": 55,
                              "colorR": 131,
                              "creationTime": 0,
                              "name": "Animate",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "playing",
                                        "False"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "PosX"
                                      },
                                      "parameters": [
                                        "timeCursor",
                                        ">",
                                        "node.X()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "PosX"
                                      },
                                      "parameters": [
                                        "timeCursor",
                                        "<",
                                        "node.X()+node.Width()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "timeCursorTool",
                                        "on",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "ObjectVariableChildExists"
                                          },
                                          "parameters": [
                                            "node",
                                            "data",
                                            "\"startAnm\""
                                          ]
                                        }
                                      ],
                                      "actions": [],
                                      "events": [
                                        {
                                          "colorB": 228,
                                          "colorG": 176,
                                          "colorR": 74,
                                          "creationTime": 0,
                                          "name": "Frame",
                                          "source": "",
                                          "type": "BuiltinCommonInstructions::Group",
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "ModVarScene"
                                                  },
                                                  "parameters": [
                                                    "playNormalized",
                                                    "=",
                                                    "normalize(timeCursor.X(), node.X(), node.X()+node.Width())"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "ModVarSceneTxt"
                                                  },
                                                  "parameters": [
                                                    "playEase",
                                                    "=",
                                                    "node.VariableString(data.anm.easing)"
                                                  ]
                                                }
                                              ],
                                              "events": [
                                                {
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "AjoutObjConcern"
                                                      },
                                                      "parameters": [
                                                        "",
                                                        "node"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "PosX"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "<",
                                                        "Variable(playNodeX)"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "ModVarSceneTxt"
                                                      },
                                                      "parameters": [
                                                        "playedBefore",
                                                        "=",
                                                        "node.VariableString(data.anm.easing)"
                                                      ]
                                                    }
                                                  ],
                                                  "events": [
                                                    {
                                                      "type": "BuiltinCommonInstructions::ForEach",
                                                      "object": "node",
                                                      "conditions": [],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "Create"
                                                          },
                                                          "parameters": [
                                                            "",
                                                            "nodeEnd",
                                                            "node.X()+node.Width()",
                                                            "node.Y()",
                                                            "\"GUI\""
                                                          ]
                                                        },
                                                        {
                                                          "type": {
                                                            "value": "LinkedObjects::LinkObjects"
                                                          },
                                                          "parameters": [
                                                            "",
                                                            "node",
                                                            "nodeEnd"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "inverted": true,
                                                            "value": "PickNearest"
                                                          },
                                                          "parameters": [
                                                            "nodeEnd",
                                                            "-1000",
                                                            "timeline.Y()",
                                                            ""
                                                          ]
                                                        },
                                                        {
                                                          "type": {
                                                            "value": "PosX"
                                                          },
                                                          "parameters": [
                                                            "nodeEnd",
                                                            "<",
                                                            "Variable(playNodeX)"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "colorB": 228,
                                              "colorG": 176,
                                              "colorR": 74,
                                              "creationTime": 0,
                                              "folded": true,
                                              "name": "Instant",
                                              "source": "",
                                              "type": "BuiltinCommonInstructions::Group",
                                              "events": [
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "VarObjetTxt"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.easing",
                                                        "=",
                                                        "\"\""
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [],
                                                  "events": [
                                                    {
                                                      "colorB": 228,
                                                      "colorG": 176,
                                                      "colorR": 74,
                                                      "creationTime": 0,
                                                      "folded": true,
                                                      "name": "positoin",
                                                      "source": "",
                                                      "type": "BuiltinCommonInstructions::Group",
                                                      "events": [
                                                        {
                                                          "folded": true,
                                                          "type": "BuiltinCommonInstructions::Standard",
                                                          "conditions": [
                                                            {
                                                              "type": {
                                                                "value": "ObjectVariableAsBoolean"
                                                              },
                                                              "parameters": [
                                                                "node",
                                                                "data.active.position.X",
                                                                "True"
                                                              ]
                                                            }
                                                          ],
                                                          "actions": [
                                                            {
                                                              "type": {
                                                                "value": "MettreX"
                                                              },
                                                              "parameters": [
                                                                "box",
                                                                "=",
                                                                "node.Variable(data.anm.position.X)"
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "folded": true,
                                                          "type": "BuiltinCommonInstructions::Standard",
                                                          "conditions": [
                                                            {
                                                              "type": {
                                                                "value": "ObjectVariableAsBoolean"
                                                              },
                                                              "parameters": [
                                                                "node",
                                                                "data.active.position.Y",
                                                                "True"
                                                              ]
                                                            }
                                                          ],
                                                          "actions": [
                                                            {
                                                              "type": {
                                                                "value": "MettreY"
                                                              },
                                                              "parameters": [
                                                                "box",
                                                                "=",
                                                                "node.Variable(data.anm.position.Y)"
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "parameters": []
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.width",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "ChangeWidth"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "node.Variable(data.anm.width)"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.height",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "ChangeHeight"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "node.Variable(data.anm.height)"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.angle",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "SetAngle"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "node.Variable(data.anm.angle)"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.opacity",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "Opacity"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "node.Variable(data.anm.opacity)"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "parameters": []
                                            },
                                            {
                                              "colorB": 228,
                                              "colorG": 176,
                                              "colorR": 74,
                                              "creationTime": 0,
                                              "folded": true,
                                              "name": "Tween",
                                              "source": "",
                                              "type": "BuiltinCommonInstructions::Group",
                                              "events": [
                                                {
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "VarObjetTxt"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.easing",
                                                        "!=",
                                                        "\"\""
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [],
                                                  "events": [
                                                    {
                                                      "colorB": 228,
                                                      "colorG": 176,
                                                      "colorR": 74,
                                                      "creationTime": 0,
                                                      "name": "positoin",
                                                      "source": "",
                                                      "type": "BuiltinCommonInstructions::Group",
                                                      "events": [
                                                        {
                                                          "folded": true,
                                                          "type": "BuiltinCommonInstructions::Standard",
                                                          "conditions": [
                                                            {
                                                              "type": {
                                                                "value": "ObjectVariableAsBoolean"
                                                              },
                                                              "parameters": [
                                                                "node",
                                                                "data.active.position.X",
                                                                "True"
                                                              ]
                                                            }
                                                          ],
                                                          "actions": [
                                                            {
                                                              "type": {
                                                                "value": "MettreX"
                                                              },
                                                              "parameters": [
                                                                "box",
                                                                "=",
                                                                "Tween::Ease(VariableString(playEase), node.Variable(data.startAnm.position.X), node.Variable(data.anm.position.X), Variable(playNormalized))"
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "folded": true,
                                                          "type": "BuiltinCommonInstructions::Standard",
                                                          "conditions": [
                                                            {
                                                              "type": {
                                                                "value": "ObjectVariableAsBoolean"
                                                              },
                                                              "parameters": [
                                                                "node",
                                                                "data.active.position.Y",
                                                                "True"
                                                              ]
                                                            }
                                                          ],
                                                          "actions": [
                                                            {
                                                              "type": {
                                                                "value": "MettreY"
                                                              },
                                                              "parameters": [
                                                                "box",
                                                                "=",
                                                                "Tween::Ease(VariableString(playEase), node.Variable(data.startAnm.position.Y), node.Variable(data.anm.position.Y), Variable(playNormalized))"
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "parameters": []
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.width",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "ChangeWidth"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "Tween::Ease(VariableString(playEase), node.Variable(data.startAnm.width), node.Variable(data.anm.width), Variable(playNormalized))"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.height",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "ChangeHeight"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "Tween::Ease(VariableString(playEase), node.Variable(data.startAnm.height), node.Variable(data.anm.height), Variable(playNormalized))"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.angle",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "SetAngle"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "Tween::Ease(VariableString(playEase), node.Variable(data.startAnm.angle), node.Variable(data.anm.angle), Variable(playNormalized))"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.opacity",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "Opacity"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "Tween::Ease(VariableString(playEase), node.Variable(data.startAnm.opacity), node.Variable(data.anm.opacity), Variable(playNormalized))"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "parameters": []
                                            },
                                            {
                                              "colorB": 228,
                                              "colorG": 176,
                                              "colorR": 74,
                                              "creationTime": 0,
                                              "folded": true,
                                              "name": "Flipping",
                                              "source": "",
                                              "type": "BuiltinCommonInstructions::Group",
                                              "events": [
                                                {
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.flippedVer",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [],
                                                  "events": [
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.anm.flippedVer",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "FlipY"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "yes"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.anm.flippedVer",
                                                            "False"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "FlipY"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "no"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.flippedHor",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [],
                                                  "events": [
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.anm.flippedHor",
                                                            "False"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "FlipX"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "no"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.anm.flippedHor",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "FlipX"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "yes"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "parameters": []
                                            },
                                            {
                                              "colorB": 228,
                                              "colorG": 176,
                                              "colorR": 74,
                                              "creationTime": 0,
                                              "folded": true,
                                              "name": "Z order",
                                              "source": "",
                                              "type": "BuiltinCommonInstructions::Group",
                                              "events": [
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.zOrder",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "ChangePlan"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "=",
                                                        "node.Variable(data.anm.zOrder)"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "parameters": []
                                            }
                                          ],
                                          "parameters": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "playing",
                                        "True"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "PosX"
                                      },
                                      "parameters": [
                                        "timeCursor",
                                        ">",
                                        "node.X()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "node",
                                        "played",
                                        "False"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "SetObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "node",
                                        "played",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "colorB": 228,
                                      "colorG": 176,
                                      "colorR": 74,
                                      "creationTime": 0,
                                      "name": "Tweens",
                                      "source": "",
                                      "type": "BuiltinCommonInstructions::Group",
                                      "events": [
                                        {
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ModVarScene"
                                              },
                                              "parameters": [
                                                "playLength",
                                                "=",
                                                "((ToNumber(timeLength.Text())/timeline.Width())*(node.Width()))*1000"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarSceneTxt"
                                              },
                                              "parameters": [
                                                "playEase",
                                                "=",
                                                "node.VariableString(data.anm.easing)"
                                              ]
                                            }
                                          ],
                                          "events": [
                                            {
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [],
                                              "actions": [],
                                              "events": [
                                                {
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.position.X",
                                                        "=",
                                                        "box.X()"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.position.Y",
                                                        "=",
                                                        "box.Y()"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.height",
                                                        "=",
                                                        "box.Height()"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.width",
                                                        "=",
                                                        "box.Width()"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.angle",
                                                        "=",
                                                        "box.Angle()"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.opacity",
                                                        "=",
                                                        "box.Opacity()"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.zOrder",
                                                        "=",
                                                        "box.ZOrder()"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.flippedHor",
                                                        "=",
                                                        "0"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.flippedVer",
                                                        "=",
                                                        "0"
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "ModVarObjet"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.startAnm.sprite.animation",
                                                        "=",
                                                        "0"
                                                      ]
                                                    }
                                                  ],
                                                  "events": [
                                                    {
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "LinkedObjects::PickObjectsLinkedTo"
                                                          },
                                                          "parameters": [
                                                            "",
                                                            "boxImage",
                                                            "box",
                                                            ""
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [],
                                                      "events": [
                                                        {
                                                          "folded": true,
                                                          "type": "BuiltinCommonInstructions::Standard",
                                                          "conditions": [
                                                            {
                                                              "type": {
                                                                "value": "FlippedX"
                                                              },
                                                              "parameters": [
                                                                "boxImage"
                                                              ]
                                                            }
                                                          ],
                                                          "actions": [
                                                            {
                                                              "type": {
                                                                "value": "ModVarObjet"
                                                              },
                                                              "parameters": [
                                                                "box",
                                                                "data.startAnm.flippedHor",
                                                                "=",
                                                                "1"
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "folded": true,
                                                          "type": "BuiltinCommonInstructions::Standard",
                                                          "conditions": [
                                                            {
                                                              "type": {
                                                                "value": "FlippedY"
                                                              },
                                                              "parameters": [
                                                                "boxImage"
                                                              ]
                                                            }
                                                          ],
                                                          "actions": [
                                                            {
                                                              "type": {
                                                                "value": "ModVarObjet"
                                                              },
                                                              "parameters": [
                                                                "box",
                                                                "data.startAnm.flippedVer",
                                                                "=",
                                                                "1"
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "colorB": 228,
                                          "colorG": 176,
                                          "colorR": 74,
                                          "creationTime": 0,
                                          "name": "Instant",
                                          "source": "",
                                          "type": "BuiltinCommonInstructions::Group",
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "VarObjetTxt"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "data.anm.easing",
                                                    "=",
                                                    "\"\""
                                                  ]
                                                }
                                              ],
                                              "actions": [],
                                              "events": [
                                                {
                                                  "colorB": 228,
                                                  "colorG": 176,
                                                  "colorR": 74,
                                                  "creationTime": 0,
                                                  "folded": true,
                                                  "name": "positoin",
                                                  "source": "",
                                                  "type": "BuiltinCommonInstructions::Group",
                                                  "events": [
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.position.X",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "MettreX"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "node.Variable(data.anm.position.X)"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.position.Y",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "MettreY"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "=",
                                                            "node.Variable(data.anm.position.Y)"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "parameters": []
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.width",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "ChangeWidth"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "=",
                                                        "node.Variable(data.anm.width)"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.height",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "ChangeHeight"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "=",
                                                        "node.Variable(data.anm.height)"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.angle",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "SetAngle"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "=",
                                                        "node.Variable(data.anm.angle)"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.opacity",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "Opacity"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "=",
                                                        "node.Variable(data.anm.opacity)"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "parameters": []
                                        },
                                        {
                                          "colorB": 228,
                                          "colorG": 176,
                                          "colorR": 74,
                                          "creationTime": 0,
                                          "name": "Easing",
                                          "source": "",
                                          "type": "BuiltinCommonInstructions::Group",
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "VarObjetTxt"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "data.anm.easing",
                                                    "!=",
                                                    "\"\""
                                                  ]
                                                }
                                              ],
                                              "actions": [],
                                              "events": [
                                                {
                                                  "colorB": 228,
                                                  "colorG": 176,
                                                  "colorR": 74,
                                                  "creationTime": 0,
                                                  "folded": true,
                                                  "name": "positoin",
                                                  "source": "",
                                                  "type": "BuiltinCommonInstructions::Group",
                                                  "events": [
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.position.X",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "Tween::AddObjectPositionXTween"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "Tween",
                                                            "\"X\"",
                                                            "node.Variable(data.anm.position.X)",
                                                            "VariableString(playEase)",
                                                            "Variable(playLength)",
                                                            ""
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "folded": true,
                                                      "type": "BuiltinCommonInstructions::Standard",
                                                      "conditions": [
                                                        {
                                                          "type": {
                                                            "value": "ObjectVariableAsBoolean"
                                                          },
                                                          "parameters": [
                                                            "node",
                                                            "data.active.position.Y",
                                                            "True"
                                                          ]
                                                        }
                                                      ],
                                                      "actions": [
                                                        {
                                                          "type": {
                                                            "value": "Tween::AddObjectPositionYTween"
                                                          },
                                                          "parameters": [
                                                            "box",
                                                            "Tween",
                                                            "\"Y\"",
                                                            "node.Variable(data.anm.position.Y)",
                                                            "VariableString(playEase)",
                                                            "Variable(playLength)",
                                                            ""
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "parameters": []
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.width",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "Tween::AddObjectWidthTween"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "Tween",
                                                        "\"W\"",
                                                        "node.Variable(data.anm.width)",
                                                        "VariableString(playEase)",
                                                        "Variable(playLength)",
                                                        ""
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.height",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "Tween::AddObjectHeightTween"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "Tween",
                                                        "\"H\"",
                                                        "node.Variable(data.anm.height)",
                                                        "VariableString(playEase)",
                                                        "Variable(playLength)",
                                                        ""
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.angle",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "Tween::AddObjectAngleTween"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "Tween",
                                                        "\"An\"",
                                                        "node.Variable(data.anm.angle)",
                                                        "VariableString(playEase)",
                                                        "Variable(playLength)",
                                                        ""
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.active.opacity",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "Tween::AddObjectOpacityTween"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "Tween",
                                                        "\"Op\"",
                                                        "node.Variable(data.anm.opacity)",
                                                        "VariableString(playEase)",
                                                        "Variable(playLength)",
                                                        ""
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "parameters": []
                                        },
                                        {
                                          "colorB": 228,
                                          "colorG": 176,
                                          "colorR": 74,
                                          "creationTime": 0,
                                          "folded": true,
                                          "name": "Flipping",
                                          "source": "",
                                          "type": "BuiltinCommonInstructions::Group",
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "ObjectVariableAsBoolean"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "data.active.flippedVer",
                                                    "True"
                                                  ]
                                                }
                                              ],
                                              "actions": [],
                                              "events": [
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.flippedVer",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipY"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "yes"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.flippedVer",
                                                        "False"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipY"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "no"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "ObjectVariableAsBoolean"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "data.active.flippedHor",
                                                    "True"
                                                  ]
                                                }
                                              ],
                                              "actions": [],
                                              "events": [
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.flippedHor",
                                                        "False"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipX"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "no"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "node",
                                                        "data.anm.flippedHor",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipX"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "yes"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "parameters": []
                                        },
                                        {
                                          "colorB": 228,
                                          "colorG": 176,
                                          "colorR": 74,
                                          "creationTime": 0,
                                          "folded": true,
                                          "name": "Z order",
                                          "source": "",
                                          "type": "BuiltinCommonInstructions::Group",
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "ObjectVariableAsBoolean"
                                                  },
                                                  "parameters": [
                                                    "node",
                                                    "data.active.zOrder",
                                                    "True"
                                                  ]
                                                }
                                              ],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "ChangePlan"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "=",
                                                    "node.Variable(data.anm.zOrder)"
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "parameters": []
                                        }
                                      ],
                                      "parameters": []
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Creating the object with copied data for duplicating the node",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "createNodeCopy",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "box",
                            "createNodeCopy",
                            "False"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "Create"
                              },
                              "parameters": [
                                "",
                                "node",
                                "Variable(nodeData.phys.X)",
                                "Variable(nodeData.phys.Y)",
                                "\"GUI\""
                              ]
                            },
                            {
                              "type": {
                                "value": "LinkedObjects::LinkObjects"
                              },
                              "parameters": [
                                "",
                                "box",
                                "node"
                              ]
                            },
                            {
                              "type": {
                                "value": "JSONToObjectVariableStructure"
                              },
                              "parameters": [
                                "ToJSON(nodeData)",
                                "node",
                                "data"
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangeHeight"
                              },
                              "parameters": [
                                "node",
                                "=",
                                "32"
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangeWidth"
                              },
                              "parameters": [
                                "node",
                                "=",
                                "(timeline.Width()/ToNumber(timeLength.Text()))*(Variable(nodeData.anm.timeline.length))"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": []
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "True"
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "name": "Show",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "LinkedObjects::PickObjectsLinkedTo"
                              },
                              "parameters": [
                                "",
                                "node",
                                "box",
                                ""
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "Opacity"
                              },
                              "parameters": [
                                "node",
                                "=",
                                "255"
                              ]
                            },
                            {
                              "type": {
                                "value": "ActivateBehavior"
                              },
                              "parameters": [
                                "node",
                                "Draggable",
                                "yes"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "node",
                                "shown",
                                "True"
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "name": "Create node",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "Click::click"
                              },
                              "parameters": [
                                "",
                                "Left",
                                "timeline",
                                ""
                              ]
                            },
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "onNode",
                                ""
                              ]
                            },
                            {
                              "type": {
                                "value": "ObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "penTool",
                                "on",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "creatingNode",
                                "True"
                              ]
                            },
                            {
                              "type": {
                                "value": "Create"
                              },
                              "parameters": [
                                "",
                                "node",
                                "MouseX(\"GUI\", 0)",
                                "floor(MouseY(\"GUI\", 0)/32)*32",
                                "\"GUI\""
                              ]
                            },
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "node",
                                "creating",
                                "True"
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangeHeight"
                              },
                              "parameters": [
                                "node",
                                "=",
                                "32"
                              ]
                            },
                            {
                              "type": {
                                "value": "LinkedObjects::LinkObjects"
                              },
                              "parameters": [
                                "",
                                "node",
                                "box"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "node",
                                "shown",
                                "True"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "name": "Data for node (anm, active)",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.easing",
                                        "=",
                                        "\"linear\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.position.X",
                                        "=",
                                        "box.X()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.position.Y",
                                        "=",
                                        "box.Y()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.height",
                                        "=",
                                        "box.Height()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.width",
                                        "=",
                                        "box.Width()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.angle",
                                        "=",
                                        "box.Angle()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.opacity",
                                        "=",
                                        "box.Opacity()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.zOrder",
                                        "=",
                                        "box.ZOrder()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.flippedHor",
                                        "=",
                                        "0"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.flippedVer",
                                        "=",
                                        "0"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjet"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm.sprite.animation",
                                        "=",
                                        "0"
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "LinkedObjects::PickObjectsLinkedTo"
                                          },
                                          "parameters": [
                                            "",
                                            "boxImage",
                                            "box",
                                            ""
                                          ]
                                        }
                                      ],
                                      "actions": [],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "FlippedX"
                                              },
                                              "parameters": [
                                                "boxImage"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "box",
                                                "data.anm.flippedHor",
                                                "=",
                                                "1"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "FlippedY"
                                              },
                                              "parameters": [
                                                "boxImage"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ModVarObjet"
                                              },
                                              "parameters": [
                                                "box",
                                                "data.anm.flippedVer",
                                                "=",
                                                "1"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "JSONToVariableStructure"
                                          },
                                          "parameters": [
                                            "ObjectVarToJSON(node, data.anm)",
                                            "nodeData.active"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::ForEachChildVariable",
                                      "iterableVariableName": "nodeData.active",
                                      "valueIteratorVariableName": "paramActValue",
                                      "keyIteratorVariableName": "param",
                                      "conditions": [],
                                      "actions": [],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareNumbers"
                                              },
                                              "parameters": [
                                                "VariableChildCount(paramActValue)",
                                                "<=",
                                                "0"
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ModVarScene"
                                              },
                                              "parameters": [
                                                "nodeData.active[VariableString(param)]",
                                                "=",
                                                "1"
                                              ]
                                            }
                                          ],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "BuiltinCommonInstructions::Or"
                                                  },
                                                  "parameters": [],
                                                  "subInstructions": [
                                                    {
                                                      "type": {
                                                        "value": "VarSceneTxt"
                                                      },
                                                      "parameters": [
                                                        "param",
                                                        "=",
                                                        "\"opacity\""
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "VarSceneTxt"
                                                      },
                                                      "parameters": [
                                                        "param",
                                                        "=",
                                                        "\"flippedVer\""
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "VarSceneTxt"
                                                      },
                                                      "parameters": [
                                                        "param",
                                                        "=",
                                                        "\"flippedHor\""
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "ModVarScene"
                                                  },
                                                  "parameters": [
                                                    "nodeData.active[VariableString(param)]",
                                                    "=",
                                                    "0"
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareNumbers"
                                              },
                                              "parameters": [
                                                "VariableChildCount(paramActValue)",
                                                ">",
                                                "0"
                                              ]
                                            }
                                          ],
                                          "actions": [],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [],
                                              "actions": []
                                            },
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::ForEachChildVariable",
                                              "iterableVariableName": "paramActValue",
                                              "valueIteratorVariableName": "subParamActValue",
                                              "keyIteratorVariableName": "subParam",
                                              "conditions": [],
                                              "actions": [],
                                              "events": [
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "ModVarScene"
                                                      },
                                                      "parameters": [
                                                        "nodeData.active[VariableString(param)][VariableString(subParam)]",
                                                        "=",
                                                        "1"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "BuiltinCommonInstructions::Or"
                                                      },
                                                      "parameters": [],
                                                      "subInstructions": [
                                                        {
                                                          "type": {
                                                            "value": "VarSceneTxt"
                                                          },
                                                          "parameters": [
                                                            "subParam",
                                                            "=",
                                                            "\"animation\""
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "ModVarScene"
                                                      },
                                                      "parameters": [
                                                        "nodeData.active[VariableString(param)][VariableString(subParam)]",
                                                        "=",
                                                        "0"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "JSONToObjectVariableStructure"
                                          },
                                          "parameters": [
                                            "ToJSON(nodeData.active)",
                                            "node",
                                            "data.active"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "selected",
                        "False"
                      ]
                    },
                    {
                      "type": {
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      },
                      "parameters": [
                        "",
                        "node",
                        "box",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ActivateBehavior"
                      },
                      "parameters": [
                        "node",
                        "Draggable",
                        "no"
                      ]
                    },
                    {
                      "type": {
                        "value": "Opacity"
                      },
                      "parameters": [
                        "node",
                        "=",
                        "25"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "node",
                        "shown",
                        "False"
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Image",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "LinkedObjects::PickObjectsLinkedTo"
                          },
                          "parameters": [
                            "",
                            "boxImager",
                            "box",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "ChangePlan"
                          },
                          "parameters": [
                            "boxImager",
                            "=",
                            "box.ZOrder()+1"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetAngle"
                          },
                          "parameters": [
                            "boxImager",
                            "=",
                            "box.Angle()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeHeight"
                          },
                          "parameters": [
                            "boxImager",
                            "=",
                            "box.Height()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeWidth"
                          },
                          "parameters": [
                            "boxImager",
                            "=",
                            "box.Width()"
                          ]
                        },
                        {
                          "type": {
                            "value": "Opacity"
                          },
                          "parameters": [
                            "boxImager",
                            "=",
                            "box.Opacity()"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetCenter"
                          },
                          "parameters": [
                            "boxImager",
                            "=",
                            "box.X()",
                            "=",
                            "box.Y()"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "LinkedObjects::PickObjectsLinkedTo"
                              },
                              "parameters": [
                                "",
                                "boxImage",
                                "box",
                                ""
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ChangePlan"
                              },
                              "parameters": [
                                "boxImage",
                                "=",
                                "boxImager.ZOrder()"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetAngle"
                              },
                              "parameters": [
                                "boxImage",
                                "=",
                                "boxImager.Angle()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangeHeight"
                              },
                              "parameters": [
                                "boxImage",
                                "=",
                                "boxImager.Height()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ChangeWidth"
                              },
                              "parameters": [
                                "boxImage",
                                "=",
                                "boxImager.Width()"
                              ]
                            },
                            {
                              "type": {
                                "value": "Opacity"
                              },
                              "parameters": [
                                "boxImage",
                                "=",
                                "boxImager.Opacity()"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "FlippedY"
                                  },
                                  "parameters": [
                                    "boxImage"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipY"
                                  },
                                  "parameters": [
                                    "boxImager",
                                    ""
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "FlippedY"
                                  },
                                  "parameters": [
                                    "boxImage"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipY"
                                  },
                                  "parameters": [
                                    "boxImager",
                                    "yes"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "FlippedX"
                                  },
                                  "parameters": [
                                    "boxImage"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipX"
                                  },
                                  "parameters": [
                                    "boxImager",
                                    ""
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "FlippedX"
                                  },
                                  "parameters": [
                                    "boxImage"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipX"
                                  },
                                  "parameters": [
                                    "boxImager",
                                    "yes"
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "MettreXY"
                                  },
                                  "parameters": [
                                    "boxImage",
                                    "=",
                                    "boxImager.PointX(\"Hang\")",
                                    "=",
                                    "boxImager.PointY(\"Hang\")"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "MouseButtonReleased"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "selectingNodes",
                    "False"
                  ]
                }
              ]
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Moving nodes",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "DraggableBehavior::Dragged"
                      },
                      "parameters": [
                        "node",
                        "Draggable"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreY"
                      },
                      "parameters": [
                        "node",
                        "=",
                        "clamp(round(node.Y()/32)*32, timeline.Y(), timeline.Y() + timeline.Height() - 32)"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "LShift"
                          ]
                        },
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "s"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "MettreX"
                          },
                          "parameters": [
                            "node",
                            "=",
                            "round(node.X()/16)*16"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "MettreX"
                          },
                          "parameters": [
                            "node",
                            "=",
                            "clamp(node.X(), timeline.X(), timeline.X() + timeline.Width() - node.Width() )"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Extending the node after creating it",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "node",
                        "creating",
                        "True"
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "creatingNode",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "ChangeWidth"
                          },
                          "parameters": [
                            "node",
                            "=",
                            "MouseX(\"GUI\", 0)-node.X()"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "MouseButtonReleased"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "node",
                            "creating",
                            "False"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "creatingNode",
                            "False"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "Width"
                              },
                              "parameters": [
                                "node",
                                "<",
                                "2"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "Delete"
                              },
                              "parameters": [
                                "node",
                                "node"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "folded": true,
          "name": "UI",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Cache"
                  },
                  "parameters": [
                    "paramListStart"
                  ]
                },
                {
                  "type": {
                    "value": "Cache"
                  },
                  "parameters": [
                    "paramListEnd"
                  ]
                },
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "center",
                    "0",
                    "0",
                    "\"\""
                  ]
                },
                {
                  "type": {
                    "value": "ChangePlan"
                  },
                  "parameters": [
                    "center",
                    "=",
                    "-10"
                  ]
                },
                {
                  "type": {
                    "value": "CentreCamera"
                  },
                  "parameters": [
                    "",
                    "center",
                    "",
                    "\"\"",
                    "0"
                  ]
                },
                {
                  "type": {
                    "value": "SetCameraCenterX"
                  },
                  "parameters": [
                    "",
                    "-",
                    "256",
                    "\"\"",
                    "0"
                  ]
                },
                {
                  "type": {
                    "value": "SetCameraCenterY"
                  },
                  "parameters": [
                    "",
                    "+",
                    "156",
                    "\"\"",
                    "0"
                  ]
                }
              ]
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Gride",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "SetCenterX"
                      },
                      "parameters": [
                        "grid",
                        "=",
                        "CameraCenterX()"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetCenterY"
                      },
                      "parameters": [
                        "grid",
                        "=",
                        "CameraCenterY()"
                      ]
                    },
                    {
                      "type": {
                        "value": "TiledSpriteObject::XOffset"
                      },
                      "parameters": [
                        "grid",
                        "=",
                        "CameraCenterX()"
                      ]
                    },
                    {
                      "type": {
                        "value": "TiledSpriteObject::YOffset"
                      },
                      "parameters": [
                        "grid",
                        "=",
                        "CameraCenterY()+16"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "DragCameraWithPointer::DragCameraWithPointer"
                      },
                      "parameters": [
                        "",
                        "0",
                        "\"\"",
                        "\"both\"",
                        "Middle",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "ZoomCamera"
                      },
                      "parameters": [
                        "",
                        "Variable(zoom)",
                        "\"\"",
                        "0"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "So there is \ncenter.CenterX()-320/2 (320 being the \"properties\" panel size)\nand\ncenter.CenterY()+288/2 (288 being the \"animation\" panel size)\nare here to center in the view and not from the middle of the screen itself",
                  "comment2": ""
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "MouseButtonPressed"
                      },
                      "parameters": [
                        "",
                        "Middle"
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Or"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "LControl"
                          ]
                        },
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "RControl"
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetCameraCenterX"
                      },
                      "parameters": [
                        "",
                        "=",
                        "center.CenterX()-320/2",
                        "\"\"",
                        "0"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetCameraCenterY"
                      },
                      "parameters": [
                        "",
                        "=",
                        "center.CenterY()+288/2",
                        "\"\"",
                        "0"
                      ]
                    },
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "zoom",
                        "=",
                        "1"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "DepartScene"
                      },
                      "parameters": [
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "TiledSpriteObject::Height"
                      },
                      "parameters": [
                        "grid",
                        "=",
                        "SceneWindowHeight()*100"
                      ]
                    },
                    {
                      "type": {
                        "value": "TiledSpriteObject::Width"
                      },
                      "parameters": [
                        "grid",
                        "=",
                        "SceneWindowWidth()*100"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BBText::IsFontSize"
                      },
                      "parameters": [
                        "supporterGuideText",
                        ">",
                        "16"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "BBText::SetFontSize"
                      },
                      "parameters": [
                        "supporterGuideText",
                        "=",
                        "32/Variable(zoom)"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BBText::IsFontSize"
                      },
                      "parameters": [
                        "supporterGuideText",
                        "<",
                        "16"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "BBText::SetFontSize"
                      },
                      "parameters": [
                        "supporterGuideText",
                        "=",
                        "18"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarScene"
                      },
                      "parameters": [
                        "zoom",
                        ">",
                        "9"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "zoom",
                        "=",
                        "9"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarScene"
                      },
                      "parameters": [
                        "zoom",
                        "<",
                        "0.1"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "zoom",
                        "=",
                        "0.1"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "IsMouseWheelScrollingDown"
                      },
                      "parameters": [
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Not"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "controlPLate",
                            "",
                            "",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "zoom",
                        "-",
                        "0.2"
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "IsMouseWheelScrollingUp"
                      },
                      "parameters": [
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Not"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "controlPLate",
                            "",
                            "",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "zoom",
                        "+",
                        "0.2"
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Change UI generator",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "colorB": 111,
                  "colorG": 139,
                  "colorR": 81,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Create and delete the UI",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "deleteChangeUI",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "deleteChangeUI",
                            "="
                          ]
                        },
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "changeUI",
                            "node"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "ObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "node",
                                "selected",
                                "False"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "node",
                                "her",
                                ""
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "createChangeUI",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "createChangeUI",
                            "="
                          ]
                        },
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "changeUI",
                            "node"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "createChangeUIIndent2",
                            "=",
                            "16"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "VarSceneTxt"
                              },
                              "parameters": [
                                "createChangeUIType",
                                "=",
                                "\"node\""
                              ]
                            },
                            {
                              "type": {
                                "value": "ObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "node",
                                "her",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.anm.timeline.start",
                                "=",
                                "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.anm.timeline.length",
                                "=",
                                "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                              ]
                            },
                            {
                              "type": {
                                "value": "JSONToVariableStructure"
                              },
                              "parameters": [
                                "ObjectVarToJSON(node, data)",
                                "nodeData"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "createChangeUICount",
                                "=",
                                "0"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::ForEachChildVariable",
                              "iterableVariableName": "nodeData.anm",
                              "valueIteratorVariableName": "paramValue",
                              "keyIteratorVariableName": "param",
                              "conditions": [],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "BuiltinCommonInstructions::CompareNumbers"
                                      },
                                      "parameters": [
                                        "VariableChildCount(paramValue)",
                                        "<=",
                                        "0"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "Create"
                                      },
                                      "parameters": [
                                        "",
                                        "paramName",
                                        "paramListStart.X()",
                                        "paramListStart.Y()+(Variable(createChangeUICount)*40)",
                                        "\"GUI\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "TextObject::String"
                                      },
                                      "parameters": [
                                        "paramName",
                                        "=",
                                        "VariableString(param)"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Create"
                                      },
                                      "parameters": [
                                        "",
                                        "paramValue",
                                        "paramListStart.X()+paramName.Width()+16",
                                        "paramListStart.Y()+(Variable(createChangeUICount)*40)-8",
                                        "\"GUI\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "TextInput::TextInputObject::SetText"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "=",
                                        "VariableString(paramValue)"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "prevValue",
                                        "=",
                                        "paramValue.Text()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Tween::AddObjectWidthTween"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "Tween",
                                        "\"set\"",
                                        "paramValue.Width()-(paramListStart.X()+paramName.Width()+32+Variable(createChangeUIIndent2))",
                                        "\"linear\"",
                                        "0.00001",
                                        ""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Cache"
                                      },
                                      "parameters": [
                                        "paramValue"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Create"
                                      },
                                      "parameters": [
                                        "",
                                        "paramCheckbox",
                                        "paramListStart.X()+paramListStart.Width()",
                                        "paramListStart.Y()+(Variable(createChangeUICount)*40)",
                                        "\"GUI\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeScale"
                                      },
                                      "parameters": [
                                        "paramCheckbox",
                                        "=",
                                        "2"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeAnimation"
                                      },
                                      "parameters": [
                                        "paramCheckbox",
                                        "=",
                                        "node.Variable(data.active[VariableString(param)])"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "location",
                                        "=",
                                        "VariableString(param)"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "subLocation",
                                        "=",
                                        "\"\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramCheckbox",
                                        "location",
                                        "=",
                                        "VariableString(param)"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramCheckbox",
                                        "subLocation",
                                        "=",
                                        "\"\""
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Wait"
                                          },
                                          "parameters": [
                                            "0.02"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Montre"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "BuiltinCommonInstructions::CompareNumbers"
                                      },
                                      "parameters": [
                                        "VariableChildCount(paramValue)",
                                        ">",
                                        "0"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarScene"
                                      },
                                      "parameters": [
                                        "createChangeUIIndent",
                                        "=",
                                        "16"
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Create"
                                          },
                                          "parameters": [
                                            "",
                                            "paramName",
                                            "paramListStart.X()",
                                            "paramListStart.Y()+(Variable(createChangeUICount)*40)",
                                            "\"GUI\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "TextObject::String"
                                          },
                                          "parameters": [
                                            "paramName",
                                            "=",
                                            "VariableString(param)+\":\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarScene"
                                          },
                                          "parameters": [
                                            "createChangeUICount",
                                            "+",
                                            "1"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::ForEachChildVariable",
                                      "iterableVariableName": "paramValue",
                                      "valueIteratorVariableName": "subParamValue",
                                      "keyIteratorVariableName": "subParam",
                                      "conditions": [],
                                      "actions": [],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "Create"
                                              },
                                              "parameters": [
                                                "",
                                                "paramName",
                                                "paramListStart.X()+Variable(createChangeUIIndent)",
                                                "paramListStart.Y()+(Variable(createChangeUICount)*40)",
                                                "\"GUI\""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "TextObject::String"
                                              },
                                              "parameters": [
                                                "paramName",
                                                "=",
                                                "VariableString(subParam)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "Create"
                                              },
                                              "parameters": [
                                                "",
                                                "paramValue",
                                                "paramListStart.X()+paramName.Width()+16+Variable(createChangeUIIndent)",
                                                "paramListStart.Y()+(Variable(createChangeUICount)*40)-8",
                                                "\"GUI\""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "TextInput::TextInputObject::SetText"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "=",
                                                "VariableString(subParamValue)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjetTxt"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "prevValue",
                                                "=",
                                                "paramValue.Text()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "Tween::AddObjectWidthTween"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "Tween",
                                                "\"set\"",
                                                "paramValue.Width()-(paramListStart.X()+paramName.Width()+32+Variable(createChangeUIIndent)+Variable(createChangeUIIndent2))",
                                                "\"linear\"",
                                                "0.00001",
                                                ""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "Cache"
                                              },
                                              "parameters": [
                                                "paramValue"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "Create"
                                              },
                                              "parameters": [
                                                "",
                                                "paramCheckbox",
                                                "paramListStart.X()+paramListStart.Width()",
                                                "paramListStart.Y()+(Variable(createChangeUICount)*40)",
                                                "\"GUI\""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ChangeScale"
                                              },
                                              "parameters": [
                                                "paramCheckbox",
                                                "=",
                                                "2"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ChangeAnimation"
                                              },
                                              "parameters": [
                                                "paramCheckbox",
                                                "=",
                                                "node.Variable(data.active[VariableString(param)][VariableString(subParam)])"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjetTxt"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "location",
                                                "=",
                                                "VariableString(param)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjetTxt"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "subLocation",
                                                "=",
                                                "VariableString(subParam)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjetTxt"
                                              },
                                              "parameters": [
                                                "paramCheckbox",
                                                "location",
                                                "=",
                                                "VariableString(param)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjetTxt"
                                              },
                                              "parameters": [
                                                "paramCheckbox",
                                                "subLocation",
                                                "=",
                                                "VariableString(subParam)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarScene"
                                              },
                                              "parameters": [
                                                "createChangeUICount",
                                                "+",
                                                "1"
                                              ]
                                            }
                                          ],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "Wait"
                                                  },
                                                  "parameters": [
                                                    "0.02"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "Montre"
                                                  },
                                                  "parameters": [
                                                    "paramValue",
                                                    ""
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": []
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarScene"
                                      },
                                      "parameters": [
                                        "createChangeUICount",
                                        "+",
                                        "1"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ModVarScene"
                                  },
                                  "parameters": [
                                    "createChangeUILimit",
                                    "=",
                                    "(Variable(createChangeUICount)*40)-100"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Create"
                                  },
                                  "parameters": [
                                    "",
                                    "paramListMask",
                                    "0",
                                    "71",
                                    "\"GUI\""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "SetSize"
                                  },
                                  "parameters": [
                                    "paramListMask",
                                    "320",
                                    "601"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "VarSceneTxt"
                              },
                              "parameters": [
                                "createChangeUIType",
                                "=",
                                "\"box\""
                              ]
                            },
                            {
                              "type": {
                                "value": "ObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "box",
                                "her",
                                "True"
                              ]
                            },
                            {
                              "type": {
                                "value": "SourisSurObjet"
                              },
                              "parameters": [
                                "box",
                                "",
                                "",
                                ""
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.position.X",
                                "=",
                                "box.X()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.position.Y",
                                "=",
                                "box.Y()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.height",
                                "=",
                                "box.Height()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.width",
                                "=",
                                "box.Width()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.angle",
                                "=",
                                "box.Angle()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.opacity",
                                "=",
                                "box.Opacity()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "box",
                                "data.anm.zOrder",
                                "=",
                                "box.ZOrder()"
                              ]
                            },
                            {
                              "type": {
                                "value": "JSONToVariableStructure"
                              },
                              "parameters": [
                                "ObjectVarToJSON(box, data)",
                                "nodeData"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "createChangeUICount",
                                "=",
                                "0"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::ForEachChildVariable",
                              "iterableVariableName": "nodeData.anm",
                              "valueIteratorVariableName": "paramValue",
                              "keyIteratorVariableName": "param",
                              "conditions": [],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "BuiltinCommonInstructions::CompareNumbers"
                                      },
                                      "parameters": [
                                        "VariableChildCount(paramValue)",
                                        "<=",
                                        "0"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "Create"
                                      },
                                      "parameters": [
                                        "",
                                        "paramName",
                                        "paramListStart.X()",
                                        "paramListStart.Y()+(Variable(createChangeUICount)*40)",
                                        "\"GUI\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "TextObject::String"
                                      },
                                      "parameters": [
                                        "paramName",
                                        "=",
                                        "VariableString(param)"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Create"
                                      },
                                      "parameters": [
                                        "",
                                        "paramValue",
                                        "paramListStart.X()+paramName.Width()+16",
                                        "paramListStart.Y()+(Variable(createChangeUICount)*40)-8",
                                        "\"GUI\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "TextInput::TextInputObject::SetText"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "=",
                                        "VariableString(paramValue)"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "prevValue",
                                        "=",
                                        "paramValue.Text()"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Tween::AddObjectWidthTween"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "Tween",
                                        "\"set\"",
                                        "paramValue.Width()-(paramListStart.X()+paramName.Width()+32+Variable(createChangeUIIndent2))",
                                        "\"linear\"",
                                        "0.00001",
                                        ""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Cache"
                                      },
                                      "parameters": [
                                        "paramValue"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "location",
                                        "=",
                                        "VariableString(param)"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "subLocation",
                                        "=",
                                        "\"\""
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Wait"
                                          },
                                          "parameters": [
                                            "0.02"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Montre"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "BuiltinCommonInstructions::CompareNumbers"
                                      },
                                      "parameters": [
                                        "VariableChildCount(paramValue)",
                                        ">",
                                        "0"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarScene"
                                      },
                                      "parameters": [
                                        "createChangeUIIndent",
                                        "=",
                                        "16"
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Create"
                                          },
                                          "parameters": [
                                            "",
                                            "paramName",
                                            "paramListStart.X()",
                                            "paramListStart.Y()+(Variable(createChangeUICount)*40)",
                                            "\"GUI\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "TextObject::String"
                                          },
                                          "parameters": [
                                            "paramName",
                                            "=",
                                            "VariableString(param)+\":\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarScene"
                                          },
                                          "parameters": [
                                            "createChangeUICount",
                                            "+",
                                            "1"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::ForEachChildVariable",
                                      "iterableVariableName": "paramValue",
                                      "valueIteratorVariableName": "subParamValue",
                                      "keyIteratorVariableName": "subParam",
                                      "conditions": [],
                                      "actions": [],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "Create"
                                              },
                                              "parameters": [
                                                "",
                                                "paramName",
                                                "paramListStart.X()+Variable(createChangeUIIndent)",
                                                "paramListStart.Y()+(Variable(createChangeUICount)*40)",
                                                "\"GUI\""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "TextObject::String"
                                              },
                                              "parameters": [
                                                "paramName",
                                                "=",
                                                "VariableString(subParam)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "Create"
                                              },
                                              "parameters": [
                                                "",
                                                "paramValue",
                                                "paramListStart.X()+paramName.Width()+16+Variable(createChangeUIIndent)",
                                                "paramListStart.Y()+(Variable(createChangeUICount)*40)-8",
                                                "\"GUI\""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "TextInput::TextInputObject::SetText"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "=",
                                                "VariableString(subParamValue)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjetTxt"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "prevValue",
                                                "=",
                                                "paramValue.Text()"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "Tween::AddObjectWidthTween"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "Tween",
                                                "\"set\"",
                                                "paramValue.Width()-(paramListStart.X()+paramName.Width()+32+Variable(createChangeUIIndent)+Variable(createChangeUIIndent2))",
                                                "\"linear\"",
                                                "0.00001",
                                                ""
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "Cache"
                                              },
                                              "parameters": [
                                                "paramValue"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjetTxt"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "location",
                                                "=",
                                                "VariableString(param)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarObjetTxt"
                                              },
                                              "parameters": [
                                                "paramValue",
                                                "subLocation",
                                                "=",
                                                "VariableString(subParam)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "ModVarScene"
                                              },
                                              "parameters": [
                                                "createChangeUICount",
                                                "+",
                                                "1"
                                              ]
                                            }
                                          ],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "Wait"
                                                  },
                                                  "parameters": [
                                                    "0.02"
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "Montre"
                                                  },
                                                  "parameters": [
                                                    "paramValue",
                                                    ""
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": []
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarScene"
                                      },
                                      "parameters": [
                                        "createChangeUICount",
                                        "+",
                                        "1"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ModVarScene"
                                  },
                                  "parameters": [
                                    "createChangeUILimit",
                                    "=",
                                    "(Variable(createChangeUICount)*40)-100"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Create"
                                  },
                                  "parameters": [
                                    "",
                                    "paramListMask",
                                    "0",
                                    "71",
                                    "\"GUI\""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "SetSize"
                                  },
                                  "parameters": [
                                    "paramListMask",
                                    "320",
                                    "601"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "AjoutObjConcern"
                              },
                              "parameters": [
                                "",
                                "changeUIMovable"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "changeUIScroll",
                                "=",
                                "clamp(Variable(changeUIScroll), -16, Variable(createChangeUILimit))"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::ForEach",
                              "object": "changeUIMovable",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "changeUIMovable",
                                    "changeUIPositonY",
                                    "=",
                                    "changeUIMovable.Y()"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "MettreY"
                                  },
                                  "parameters": [
                                    "changeUIMovable",
                                    "=",
                                    "changeUIMovable.Variable(changeUIPositonY)-Variable(changeUIScroll)"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "SpriteMasking::Mask"
                      },
                      "parameters": [
                        "",
                        "paramCheckbox",
                        "paramListMask",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "SpriteMasking::Mask"
                      },
                      "parameters": [
                        "",
                        "paramName",
                        "paramListMask",
                        ""
                      ]
                    }
                  ],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "paramListMask",
                            "",
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Or"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "IsMouseWheelScrollingDown"
                              },
                              "parameters": [
                                ""
                              ]
                            },
                            {
                              "type": {
                                "value": "IsMouseWheelScrollingUp"
                              },
                              "parameters": [
                                ""
                              ]
                            }
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "changeUIScroll",
                            "-",
                            "MouseWheelDelta()/2"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "changeUIScroll",
                            "=",
                            "clamp(Variable(changeUIScroll), -16, Variable(createChangeUILimit))"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "changeUIMovable",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "MettreY"
                              },
                              "parameters": [
                                "changeUIMovable",
                                "=",
                                "changeUIMovable.Variable(changeUIPositonY)-Variable(changeUIScroll)"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Or"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "PosY"
                              },
                              "parameters": [
                                "paramValue",
                                "<",
                                "paramListStart.Y()"
                              ]
                            },
                            {
                              "type": {
                                "value": "PosY"
                              },
                              "parameters": [
                                "paramValue",
                                ">",
                                "paramListEnd.Y()"
                              ]
                            }
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Cache"
                          },
                          "parameters": [
                            "paramValue"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "PosY"
                          },
                          "parameters": [
                            "paramValue",
                            ">",
                            "paramListStart.Y()"
                          ]
                        },
                        {
                          "type": {
                            "value": "PosY"
                          },
                          "parameters": [
                            "paramValue",
                            "<",
                            "paramListEnd.Y()"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Montre"
                          },
                          "parameters": [
                            "paramValue",
                            ""
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarSceneTxt"
                      },
                      "parameters": [
                        "createChangeUIType",
                        "=",
                        "\"box\""
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "box",
                        "her",
                        "True"
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::ForEach",
                      "object": "paramValue",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "AjoutObjConcern"
                              },
                              "parameters": [
                                "",
                                "box"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "TextInput::TextInputObject::Text"
                                  },
                                  "parameters": [
                                    "paramValue",
                                    "!=",
                                    "paramValue.VariableString(prevValue)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "paramValue",
                                    "prevValue",
                                    "=",
                                    "paramValue.Text()"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::ForEach",
                                  "object": "box",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "ObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "box",
                                        "selected",
                                        "True"
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "subLocation",
                                            "=",
                                            "\"\""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjetTxt"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm[paramValue.VariableString(location)]",
                                            "=",
                                            "paramValue.Text()"
                                          ]
                                        }
                                      ],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(location)",
                                                "=",
                                                "\"angle\""
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "SetAngle"
                                              },
                                              "parameters": [
                                                "box",
                                                "=",
                                                "box.Variable(data.anm[paramValue.VariableString(location)])"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(location)",
                                                "=",
                                                "\"width\""
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ChangeWidth"
                                              },
                                              "parameters": [
                                                "box",
                                                "=",
                                                "box.Variable(data.anm[paramValue.VariableString(location)])"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(location)",
                                                "=",
                                                "\"height\""
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ChangeHeight"
                                              },
                                              "parameters": [
                                                "box",
                                                "=",
                                                "box.Variable(data.anm[paramValue.VariableString(location)])"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(location)",
                                                "=",
                                                "\"opacity\""
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "Opacity"
                                              },
                                              "parameters": [
                                                "box",
                                                "=",
                                                "box.Variable(data.anm[paramValue.VariableString(location)])"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(location)",
                                                "=",
                                                "\"zOrder\""
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "ChangePlan"
                                              },
                                              "parameters": [
                                                "box",
                                                "=",
                                                "box.Variable(data.anm[paramValue.VariableString(location)])"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(location)",
                                                "=",
                                                "\"flippedHor\""
                                              ]
                                            }
                                          ],
                                          "actions": [],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "boxImage",
                                                    "box",
                                                    ""
                                                  ]
                                                }
                                              ],
                                              "actions": [],
                                              "events": [
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "data.anm[paramValue.VariableString(location)]",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipX"
                                                      },
                                                      "parameters": [
                                                        "boxImage",
                                                        "yes"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "data.anm[paramValue.VariableString(location)]",
                                                        "False"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipX"
                                                      },
                                                      "parameters": [
                                                        "boxImage",
                                                        "no"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(location)",
                                                "=",
                                                "\"flippedVer\""
                                              ]
                                            }
                                          ],
                                          "actions": [],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "boxImage",
                                                    "box",
                                                    ""
                                                  ]
                                                }
                                              ],
                                              "actions": [],
                                              "events": [
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "data.anm[paramValue.VariableString(location)]",
                                                        "True"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipY"
                                                      },
                                                      "parameters": [
                                                        "boxImage",
                                                        "yes"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "folded": true,
                                                  "type": "BuiltinCommonInstructions::Standard",
                                                  "conditions": [
                                                    {
                                                      "type": {
                                                        "value": "ObjectVariableAsBoolean"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "data.anm[paramValue.VariableString(location)]",
                                                        "False"
                                                      ]
                                                    }
                                                  ],
                                                  "actions": [
                                                    {
                                                      "type": {
                                                        "value": "FlipY"
                                                      },
                                                      "parameters": [
                                                        "boxImage",
                                                        "no"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "subLocation",
                                            "!=",
                                            "\"\""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarObjetTxt"
                                          },
                                          "parameters": [
                                            "box",
                                            "data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]",
                                            "=",
                                            "paramValue.Text()"
                                          ]
                                        }
                                      ],
                                      "events": [
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(subLocation)",
                                                "=",
                                                "\"X\""
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "MettreX"
                                              },
                                              "parameters": [
                                                "box",
                                                "=",
                                                "box.Variable(data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)])"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(subLocation)",
                                                "=",
                                                "\"Y\""
                                              ]
                                            }
                                          ],
                                          "actions": [
                                            {
                                              "type": {
                                                "value": "MettreY"
                                              },
                                              "parameters": [
                                                "box",
                                                "=",
                                                "box.Variable(data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)])"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "folded": true,
                                          "type": "BuiltinCommonInstructions::Standard",
                                          "conditions": [
                                            {
                                              "type": {
                                                "value": "BuiltinCommonInstructions::CompareStrings"
                                              },
                                              "parameters": [
                                                "paramValue.VariableString(subLocation)",
                                                "=",
                                                "\"imgURL\""
                                              ]
                                            }
                                          ],
                                          "actions": [],
                                          "events": [
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "VarObjetTxt"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]",
                                                    "!=",
                                                    "\"0\""
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "VarObjetTxt"
                                                  },
                                                  "parameters": [
                                                    "box",
                                                    "data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]",
                                                    "!=",
                                                    "\"\""
                                                  ]
                                                }
                                              ],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "boxImage",
                                                    "box",
                                                    ""
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "ResourceLoadingTools::LoadURLIntoSprite"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "box.VariableString(data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)])",
                                                    "boxImage",
                                                    "",
                                                    "yes",
                                                    ""
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "folded": true,
                                              "type": "BuiltinCommonInstructions::Standard",
                                              "conditions": [
                                                {
                                                  "type": {
                                                    "value": "BuiltinCommonInstructions::Or"
                                                  },
                                                  "parameters": [],
                                                  "subInstructions": [
                                                    {
                                                      "type": {
                                                        "value": "VarObjetTxt"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]",
                                                        "=",
                                                        "\"0\""
                                                      ]
                                                    },
                                                    {
                                                      "type": {
                                                        "value": "VarObjetTxt"
                                                      },
                                                      "parameters": [
                                                        "box",
                                                        "data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]",
                                                        "=",
                                                        "\"\""
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "actions": [
                                                {
                                                  "type": {
                                                    "value": "LinkedObjects::PickObjectsLinkedTo"
                                                  },
                                                  "parameters": [
                                                    "",
                                                    "boxImage",
                                                    "box",
                                                    ""
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "SetAnimationName"
                                                  },
                                                  "parameters": [
                                                    "boxImage",
                                                    "\"boxImage\""
                                                  ]
                                                },
                                                {
                                                  "type": {
                                                    "value": "SetAnimationName"
                                                  },
                                                  "parameters": [
                                                    "boxImage",
                                                    "\"empty\""
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "name": "Condition for updating the data",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "False"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "DraggableBehavior::Dragged"
                              },
                              "parameters": [
                                "box",
                                "Draggable"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "movingEverything",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingSupported",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "gettingMoved",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "box",
                            "data.anm.position.X",
                            "=",
                            "box.X()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "box",
                            "data.anm.position.Y",
                            "=",
                            "box.Y()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "box",
                            "data.anm.height",
                            "=",
                            "box.Height()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "box",
                            "data.anm.width",
                            "=",
                            "box.Width()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "box",
                            "data.anm.angle",
                            "=",
                            "box.Angle()"
                          ]
                        },
                        {
                          "type": {
                            "value": "JSONToVariableStructure"
                          },
                          "parameters": [
                            "ObjectVarToJSON(box, data)",
                            "nodeData"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::ForEachChildVariable",
                          "iterableVariableName": "nodeData.anm",
                          "valueIteratorVariableName": "paramValue",
                          "keyIteratorVariableName": "param",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "BuiltinCommonInstructions::CompareNumbers"
                                  },
                                  "parameters": [
                                    "VariableChildCount(paramValue)",
                                    "<=",
                                    "0"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "VarObjetTxt"
                                  },
                                  "parameters": [
                                    "paramValue",
                                    "location",
                                    "=",
                                    "VariableString(param)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextInput::TextInputObject::SetText"
                                  },
                                  "parameters": [
                                    "paramValue",
                                    "=",
                                    "VariableString(paramValue)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "paramValue",
                                    "prevValue",
                                    "=",
                                    "paramValue.Text()"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "Wait"
                                      },
                                      "parameters": [
                                        "0.02"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Montre"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        ""
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "BuiltinCommonInstructions::CompareNumbers"
                                  },
                                  "parameters": [
                                    "VariableChildCount(paramValue)",
                                    ">",
                                    "0"
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::ForEachChildVariable",
                                  "iterableVariableName": "paramValue",
                                  "valueIteratorVariableName": "subParamValue",
                                  "keyIteratorVariableName": "subParam",
                                  "conditions": [],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "location",
                                            "=",
                                            "VariableString(param)"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "subLocation",
                                            "=",
                                            "VariableString(subParam)"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "TextInput::TextInputObject::SetText"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "=",
                                            "VariableString(subParamValue)"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjetTxt"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "prevValue",
                                            "=",
                                            "paramValue.Text()"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarSceneTxt"
                      },
                      "parameters": [
                        "createChangeUIType",
                        "=",
                        "\"node\""
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "node",
                        "her",
                        "True"
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "MouseButtonReleased"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        },
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "paramCheckbox",
                            "",
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "paramListMask",
                            "",
                            "",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "temp.boolen",
                            "=",
                            "paramCheckbox.Animation()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ToggleSceneVariableAsBoolean"
                          },
                          "parameters": [
                            "temp.boolen"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeAnimation"
                          },
                          "parameters": [
                            "paramCheckbox",
                            "=",
                            "Variable(temp.boolen)"
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::ForEach",
                      "object": "paramCheckbox",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "VarObjetTxt"
                              },
                              "parameters": [
                                "paramCheckbox",
                                "subLocation",
                                "=",
                                "\"\""
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.active[paramCheckbox.VariableString(location)]",
                                "=",
                                "paramCheckbox.Animation()"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "VarObjetTxt"
                              },
                              "parameters": [
                                "paramCheckbox",
                                "subLocation",
                                "!=",
                                "\"\""
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.active[paramCheckbox.VariableString(location)][paramCheckbox.VariableString(subLocation)]",
                                "=",
                                "paramCheckbox.Animation()"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::ForEach",
                      "object": "paramValue",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "TextInput::TextInputObject::Text"
                              },
                              "parameters": [
                                "paramValue",
                                "!=",
                                "paramValue.VariableString(prevValue)"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjetTxt"
                              },
                              "parameters": [
                                "paramValue",
                                "prevValue",
                                "=",
                                "paramValue.Text()"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::ForEach",
                              "object": "node",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "ObjectVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "node",
                                    "selected",
                                    "True"
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "subLocation",
                                        "=",
                                        "\"\""
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm[paramValue.VariableString(location)]",
                                        "=",
                                        "paramValue.Text()"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "subLocation",
                                        "!=",
                                        "\"\""
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]",
                                        "=",
                                        "paramValue.Text()"
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::CompareStrings"
                                          },
                                          "parameters": [
                                            "paramValue.VariableString(subLocation)",
                                            "=",
                                            "\"start\""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "MettreX"
                                          },
                                          "parameters": [
                                            "node",
                                            "=",
                                            "(timeline.Width()/ToNumber(timeLength.Text()))*(node.Variable(data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]))+timeline.X()"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::CompareStrings"
                                          },
                                          "parameters": [
                                            "paramValue.VariableString(subLocation)",
                                            "=",
                                            "\"length\""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ChangeWidth"
                                          },
                                          "parameters": [
                                            "node",
                                            "=",
                                            "(timeline.Width()/ToNumber(timeLength.Text()))*(node.Variable(data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]))"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "disabled": true,
                              "folded": true,
                              "name": "Grouped events",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "subLocation",
                                        "=",
                                        "\"\""
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm[paramValue.VariableString(location)]",
                                        "=",
                                        "paramValue.Text()"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VarObjetTxt"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        "subLocation",
                                        "!=",
                                        "\"\""
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ModVarObjetTxt"
                                      },
                                      "parameters": [
                                        "node",
                                        "data.anm[paramValue.VariableString(location)][paramValue.VariableString(subLocation)]",
                                        "=",
                                        "paramValue.Text()"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "parameters": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "name": "Condition for updating the data",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "False"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingBoxed",
                                "False"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "LinkedObjects::PickObjectsLinkedTo"
                              },
                              "parameters": [
                                "",
                                "box",
                                "node",
                                ""
                              ]
                            },
                            {
                              "type": {
                                "value": "DraggableBehavior::Dragged"
                              },
                              "parameters": [
                                "box",
                                "Draggable"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingBoxed",
                                "True"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "DraggableBehavior::Dragged"
                              },
                              "parameters": [
                                "node",
                                "Draggable"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "movingEveryNode",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "movingEverything",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingSupported",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            },
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingBoxed",
                                "True"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "extendingNode",
                                "True"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetSceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingMoved",
                                "True"
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SceneVariableAsBoolean"
                          },
                          "parameters": [
                            "gettingMoved",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "node",
                            "data.anm.timeline.length",
                            "=",
                            "(ToNumber(timeLength.Text())/timeline.Width())*(node.Width())"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "node",
                            "data.anm.timeline.start",
                            "=",
                            "(ToNumber(timeLength.Text())/timeline.Width())*(node.X()-timeline.X())"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableAsBoolean"
                              },
                              "parameters": [
                                "gettingBoxed",
                                "True"
                              ]
                            },
                            {
                              "type": {
                                "value": "LinkedObjects::PickObjectsLinkedTo"
                              },
                              "parameters": [
                                "",
                                "box",
                                "node",
                                ""
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.anm.position.X",
                                "=",
                                "box.X()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.anm.position.Y",
                                "=",
                                "box.Y()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.anm.height",
                                "=",
                                "box.Height()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.anm.width",
                                "=",
                                "box.Width()"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "node",
                                "data.anm.angle",
                                "=",
                                "box.Angle()"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "JSONToVariableStructure"
                              },
                              "parameters": [
                                "ObjectVarToJSON(node, data)",
                                "nodeData"
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::ForEachChildVariable",
                          "iterableVariableName": "nodeData.anm",
                          "valueIteratorVariableName": "paramValue",
                          "keyIteratorVariableName": "param",
                          "conditions": [],
                          "actions": [],
                          "events": [
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "BuiltinCommonInstructions::CompareNumbers"
                                  },
                                  "parameters": [
                                    "VariableChildCount(paramValue)",
                                    "<=",
                                    "0"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "VarObjetTxt"
                                  },
                                  "parameters": [
                                    "paramValue",
                                    "location",
                                    "=",
                                    "VariableString(param)"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextInput::TextInputObject::SetText"
                                  },
                                  "parameters": [
                                    "paramValue",
                                    "=",
                                    "VariableString(paramValue)"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "paramValue",
                                    "prevValue",
                                    "=",
                                    "paramValue.Text()"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "Wait"
                                      },
                                      "parameters": [
                                        "0.02"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Montre"
                                      },
                                      "parameters": [
                                        "paramValue",
                                        ""
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "folded": true,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "BuiltinCommonInstructions::CompareNumbers"
                                  },
                                  "parameters": [
                                    "VariableChildCount(paramValue)",
                                    ">",
                                    "0"
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::ForEachChildVariable",
                                  "iterableVariableName": "paramValue",
                                  "valueIteratorVariableName": "subParamValue",
                                  "keyIteratorVariableName": "subParam",
                                  "conditions": [],
                                  "actions": [],
                                  "events": [
                                    {
                                      "folded": true,
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "location",
                                            "=",
                                            "VariableString(param)"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "subLocation",
                                            "=",
                                            "VariableString(subParam)"
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "TextInput::TextInputObject::SetText"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "=",
                                            "VariableString(subParamValue)"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "ModVarObjetTxt"
                                          },
                                          "parameters": [
                                            "paramValue",
                                            "prevValue",
                                            "=",
                                            "paramValue.Text()"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": []
        },
        {
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": []
        }
      ],
      "parameters": []
    },
    {
      "folded": true,
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [],
      "actions": []
    }
  ],
  "layers": [
    {
      "ambientLightColorB": 32,
      "ambientLightColorG": 0,
      "ambientLightColorR": 0,
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "name": "",
      "visibility": true,
      "cameras": [
        {
          "defaultSize": true,
          "defaultViewport": true,
          "height": 0,
          "viewportBottom": 1,
          "viewportLeft": 0,
          "viewportRight": 1,
          "viewportTop": 0,
          "width": 0
        }
      ],
      "effects": []
    },
    {
      "ambientLightColorB": 7863872,
      "ambientLightColorG": 6037952,
      "ambientLightColorR": 7529040,
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "name": "GUI",
      "visibility": true,
      "cameras": [],
      "effects": []
    }
  ],
  "behaviorsSharedData": [
    {
      "name": "DraggableSliderControl",
      "type": "DraggableSliderControl::DraggableSliderControl"
    },
    {
      "name": "FPSDisplayer",
      "type": "FPS::FPSDisplayer"
    },
    {
      "name": "Tween",
      "type": "Tween::TweenBehavior"
    },
    {
      "name": "YSort",
      "type": "YSort::YSort"
    }
  ]
}